{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4","program":"/Users/linkov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","discard","/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=99b778ddd0c542cd","-C","extra-filename=-99b778ddd0c542cd","--out-dir","/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps","-L","dependency=/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/linkov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps/libdiscard-99b778ddd0c542cd.rmeta"},"prelude":{"crate_id":{"name":"discard","disambiguator":[11408465840001602591,6720066241500139592]},"crate_root":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src","external_crates":[{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}}],"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":0,"byte_end":11323,"line_start":1,"line_end":319,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":0,"byte_end":11323,"line_start":1,"line_end":319,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":23},{"krate":0,"index":27},{"krate":0,"index":9},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":20}],"decl_id":null,"docs":" There are situations where you need to intentionally leak *some*\n memory but not *other* memory. This crate can help!","sig":null,"attributes":[{"value":"! There are situations where you need to intentionally leak *some*","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":0,"byte_end":68,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"! memory but not *other* memory. This crate can help!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":69,"byte_end":124,"line_start":2,"line_end":2,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":125,"byte_end":128,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! But before I explain, you are probably wondering: why would I","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":129,"byte_end":194,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"! want to leak memory in the first place?","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":195,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":239,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! There are certain rare situations where leaking memory is either","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":243,"byte_end":311,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"! desirable or *necessary*.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":312,"byte_end":341,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":342,"byte_end":345,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! As an example, let's say I am using [stdweb](https://crates.io/crates/stdweb),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":346,"byte_end":428,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"! which lets me use JavaScript APIs in Rust.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":429,"byte_end":475,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":476,"byte_end":479,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! So I write some code like this:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":480,"byte_end":515,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":516,"byte_end":519,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":520,"byte_end":538,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! node.add_event_listener(|event: ClickEvent| {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":539,"byte_end":588,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!     // ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":589,"byte_end":603,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"! });","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":604,"byte_end":611,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":612,"byte_end":619,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":620,"byte_end":623,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Seems reasonable, right? But there's a problem: the `add_event_listener` method","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":624,"byte_end":707,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"! returns an `EventListenerHandle`, and when the `EventListenerHandle` is dropped it","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":708,"byte_end":794,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"! will remove the event listener.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":795,"byte_end":830,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":831,"byte_end":834,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! Because I'm not using the `EventListenerHandle`, it is immediately dropped, so it","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":835,"byte_end":920,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"! receives no events!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":921,"byte_end":944,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":945,"byte_end":948,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! Okay, no problem, just use [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn.forget.html):","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":949,"byte_end":1051,"line_start":28,"line_end":28,"column_start":1,"column_end":103}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1052,"byte_end":1055,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1056,"byte_end":1074,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"! // This will automatically remove the event listener when `handle` is dropped","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1075,"byte_end":1156,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"! let handle = node.add_event_listener(|event: ClickEvent| {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1157,"byte_end":1219,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"!     // ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1220,"byte_end":1234,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"! });","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1235,"byte_end":1242,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1243,"byte_end":1246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! // Now it will no longer remove the event listener","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1247,"byte_end":1301,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"! std::mem::forget(handle);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1302,"byte_end":1331,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1332,"byte_end":1339,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1340,"byte_end":1343,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! Now the event listener will remain alive forever, which is what I want.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1344,"byte_end":1419,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1420,"byte_end":1423,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! But there's two problems with this:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1424,"byte_end":1463,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1464,"byte_end":1467,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! 1) I want it to keep the event listener alive forever, but I *also* want it to clean up any","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1468,"byte_end":1563,"line_start":44,"line_end":44,"column_start":1,"column_end":96}},{"value":"!    unused internal memory. Using [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn.forget.html)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1564,"byte_end":1671,"line_start":45,"line_end":45,"column_start":1,"column_end":108}},{"value":"!    causes it to leak ***all*** of the memory, which is wasteful.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1672,"byte_end":1740,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1741,"byte_end":1744,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! 2) There are situations where I want to leak the event listener, and then later *unleak* it.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1745,"byte_end":1841,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"!    That's not possible with [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn.forget.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1842,"byte_end":1945,"line_start":49,"line_end":49,"column_start":1,"column_end":104}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1946,"byte_end":1949,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! The solution to all of these problems is:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1950,"byte_end":1995,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":1996,"byte_end":1999,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! 1. The `EventListenerHandle` should ***not*** implement the [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html) trait.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2000,"byte_end":2130,"line_start":53,"line_end":53,"column_start":1,"column_end":131}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2131,"byte_end":2134,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! 2. The `EventListenerHandle` should implement the [`Discard`](trait.Discard.html) trait instead.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2135,"byte_end":2235,"line_start":55,"line_end":55,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2236,"byte_end":2239,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! 3. The `add_event_listener` method should return `DiscardOnDrop<EventListenerHandle>`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2240,"byte_end":2330,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2331,"byte_end":2334,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! Now let's look at what is possible:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2335,"byte_end":2374,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2375,"byte_end":2378,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2379,"byte_end":2397,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"! // This will automatically remove the event listener when `handle` is dropped","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2398,"byte_end":2479,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"! let handle = node.add_event_listener(|event: ClickEvent| {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2480,"byte_end":2542,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"!     // ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2543,"byte_end":2557,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"! });","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2558,"byte_end":2565,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2566,"byte_end":2569,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! // Now it will no longer remove the event listener, this is similar to `std::mem::forget`","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2570,"byte_end":2663,"line_start":67,"line_end":67,"column_start":1,"column_end":94}},{"value":"! let leaked = DiscardOnDrop::leak(handle);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2664,"byte_end":2709,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2710,"byte_end":2713,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! // Now it will remove the event listener, even though it was leaked","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2714,"byte_end":2785,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"! leaked.discard();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2786,"byte_end":2807,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"! ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2808,"byte_end":2815,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2816,"byte_end":2819,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! There's two huge differences between [`DiscardOnDrop::leak`](struct.DiscardOnDrop.html#method.leak)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2820,"byte_end":2923,"line_start":74,"line_end":74,"column_start":1,"column_end":104}},{"value":"! and [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn.forget.html):","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":2924,"byte_end":3003,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3004,"byte_end":3007,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! 1) [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn.forget.html) leaks ***all*** of the memory,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3008,"byte_end":3116,"line_start":77,"line_end":77,"column_start":1,"column_end":109}},{"value":"!    [`DiscardOnDrop::leak`](struct.DiscardOnDrop.html#method.leak) leaks the *minimal*","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3117,"byte_end":3206,"line_start":78,"line_end":78,"column_start":1,"column_end":90}},{"value":"!    amount of memory: unused memory is properly cleaned up.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3207,"byte_end":3269,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3270,"byte_end":3273,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! 2) With [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn.forget.html) you cannot","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3274,"byte_end":3367,"line_start":81,"line_end":81,"column_start":1,"column_end":94}},{"value":"!    clean up a value after it has been leaked, but with","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3368,"byte_end":3426,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"!    [`DiscardOnDrop::leak`](struct.DiscardOnDrop.html#method.leak) you can manually discard","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3427,"byte_end":3521,"line_start":83,"line_end":83,"column_start":1,"column_end":95}},{"value":"!    the value even after it has been leaked.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3522,"byte_end":3569,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3570,"byte_end":3573,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! Most of the time you don't need to worry about any of this:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3574,"byte_end":3637,"line_start":86,"line_end":86,"column_start":1,"column_end":64}},{"value":"! [`DiscardOnDrop`](struct.DiscardOnDrop.html) will automatically call","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3638,"byte_end":3710,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"! [`discard`](trait.Discard.html#tymethod.discard) when it is dropped, so in that situation","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3711,"byte_end":3804,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"! [`Discard`](trait.Discard.html) behaves the same as [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3805,"byte_end":3921,"line_start":89,"line_end":89,"column_start":1,"column_end":117}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! So you can use normal Rust idioms, and everything works as you would expect. You only need to","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":3926,"byte_end":4023,"line_start":91,"line_end":91,"column_start":1,"column_end":98}},{"value":"! worry about [`Discard`](trait.Discard.html) when you need to intentionally leak some memory.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4024,"byte_end":4120,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4122,"byte_end":4185,"line_start":94,"line_end":97,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5323,"byte_end":5330,"line_start":117,"line_end":117,"column_start":11,"column_end":18},"name":"Discard","qualname":"::Discard","value":"Discard","parent":null,"children":[{"krate":0,"index":8}],"decl_id":null,"docs":" This trait is very similar to [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html):\n it allows for cleaning up memory and resources when they are no longer needed.","sig":null,"attributes":[{"value":"/ This trait is very similar to [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html):","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4249,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":95}},{"value":"/ it allows for cleaning up memory and resources when they are no longer needed.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4344,"byte_end":4426,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4427,"byte_end":4430,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ However, unlike [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html) you need to","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4431,"byte_end":4522,"line_start":105,"line_end":105,"column_start":1,"column_end":92}},{"value":"/ manually call the [`discard`](#tymethod.discard) method.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4523,"byte_end":4583,"line_start":106,"line_end":106,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4584,"byte_end":4587,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ It is extremely common to use [`DiscardOnDrop`](struct.DiscardOnDrop.html), which will cause it","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4588,"byte_end":4687,"line_start":108,"line_end":108,"column_start":1,"column_end":100}},{"value":"/ to automatically call the [`discard`](#tymethod.discard) method when it is dropped. In that situation","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4688,"byte_end":4793,"line_start":109,"line_end":109,"column_start":1,"column_end":106}},{"value":"/ [`Discard`](trait.Discard.html) behaves exactly the same as [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4794,"byte_end":4918,"line_start":110,"line_end":110,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4919,"byte_end":4922,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ You can use [`DiscardOnDrop::leak`](struct.DiscardOnDrop.html#method.leak) to intentionally leak the value","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":4923,"byte_end":5033,"line_start":112,"line_end":112,"column_start":1,"column_end":111}},{"value":"/ (which causes [`discard`](#tymethod.discard) to not be called), and then later you can manually call","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5034,"byte_end":5138,"line_start":113,"line_end":113,"column_start":1,"column_end":105}},{"value":"/ [`discard`](#tymethod.discard) to clean up the resources, even after the resources have been leaked.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5139,"byte_end":5243,"line_start":114,"line_end":114,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5244,"byte_end":5247,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation](index.html) for more details.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5248,"byte_end":5312,"line_start":116,"line_end":116,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5527,"byte_end":5534,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"discard","qualname":"::Discard::discard","value":"pub fn discard(Self)","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" This consumes the value and cleans up any memory / resources / etc. that the value was\n using.","sig":null,"attributes":[{"value":"/ This consumes the value and cleans up any memory / resources / etc. that the value was","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5337,"byte_end":5427,"line_start":118,"line_end":118,"column_start":5,"column_end":95}},{"value":"/ using.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5432,"byte_end":5442,"line_start":119,"line_end":119,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5447,"byte_end":5450,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ See the [module documentation](index.html) for more details.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5455,"byte_end":5519,"line_start":121,"line_end":121,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6654,"byte_end":6667,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"DiscardOnDrop","qualname":"::DiscardOnDrop","value":"","parent":null,"children":[],"decl_id":null,"docs":" If you have a value which implements [`Discard`](trait.Discard.html), you can use\n [`DiscardOnDrop::new(value)`](struct.DiscardOnDrop.html#method.new) which will wrap the value.\n When the wrapper is dropped it will automatically call [`value.discard()`](trait.Discard.html#tymethod.discard).","sig":null,"attributes":[{"value":"/ If you have a value which implements [`Discard`](trait.Discard.html), you can use","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5546,"byte_end":5631,"line_start":126,"line_end":126,"column_start":1,"column_end":86}},{"value":"/ [`DiscardOnDrop::new(value)`](struct.DiscardOnDrop.html#method.new) which will wrap the value.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5632,"byte_end":5730,"line_start":127,"line_end":127,"column_start":1,"column_end":99}},{"value":"/ When the wrapper is dropped it will automatically call [`value.discard()`](trait.Discard.html#tymethod.discard).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5731,"byte_end":5847,"line_start":128,"line_end":128,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5848,"byte_end":5851,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ You can use the [`DiscardOnDrop::leak`](#method.leak) function to unwrap it (which returns `value`). This causes","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5852,"byte_end":5968,"line_start":130,"line_end":130,"column_start":1,"column_end":117}},{"value":"/ it to no longer call [`discard`](trait.Discard.html#tymethod.discard) when it is dropped, which","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":5969,"byte_end":6068,"line_start":131,"line_end":131,"column_start":1,"column_end":100}},{"value":"/ means it will leak memory unless you manually call [`discard`](trait.Discard.html#tymethod.discard).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6069,"byte_end":6173,"line_start":132,"line_end":132,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation](index.html) for more details.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6178,"byte_end":6242,"line_start":134,"line_end":134,"column_start":1,"column_end":65}},{"value":"must_use =\n  \"\nThe DiscardOnDrop is unused, which causes it to be immediately discarded.\nYou probably don't want that to happen.\n\nHow to fix this:\n\n  * Store the DiscardOnDrop in a variable or data structure.\n\n  * Or use the DiscardOnDrop::leak function which will cause it to not be\n    discarded (this *will* leak memory!).\n\nSee the DiscardOnDrop documentation for more details.\"","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6243,"byte_end":6625,"line_start":135,"line_end":146,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7017,"byte_end":7020,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<DiscardOnDrop<A>>::new","value":"pub fn new(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DiscardOnDrop`.","sig":null,"attributes":[{"value":"/ Creates a new `DiscardOnDrop`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6739,"byte_end":6773,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6778,"byte_end":6781,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When the `DiscardOnDrop` is dropped it will automatically call [`discarder.discard()`](trait.Discard.html#tymethod.discard).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6786,"byte_end":6914,"line_start":153,"line_end":153,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6919,"byte_end":6922,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ See the [module documentation](index.html) for more details.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6927,"byte_end":6991,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6996,"byte_end":7005,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7636,"byte_end":7640,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"leak","qualname":"<DiscardOnDrop<A>>::leak","value":"pub fn leak(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped `discarder`.","sig":null,"attributes":[{"value":"/ Returns the wrapped `discarder`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7108,"byte_end":7144,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7149,"byte_end":7152,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ It will no longer automatically call [`discarder.discard()`](trait.Discard.html#tymethod.discard), so this ***will*** leak memory","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7157,"byte_end":7290,"line_start":163,"line_end":163,"column_start":5,"column_end":138}},{"value":"/ unless you manually call [`discarder.discard()`](trait.Discard.html#tymethod.discard).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7295,"byte_end":7385,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7390,"byte_end":7393,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ See the [module documentation](index.html) for more details.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7398,"byte_end":7462,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7467,"byte_end":7470,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This is implemented as a function (*not* a method) so that way it doesn't interfere with any of the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7475,"byte_end":7578,"line_start":168,"line_end":168,"column_start":5,"column_end":108}},{"value":"/ methods on `discarder`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7583,"byte_end":7610,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":7615,"byte_end":7624,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6716,"byte_end":6729,"line_start":150,"line_end":150,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":8313,"byte_end":8326,"line_start":187,"line_end":187,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":9173,"byte_end":9186,"line_start":208,"line_end":208,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":9329,"byte_end":9342,"line_start":217,"line_end":217,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":6716,"byte_end":6729,"line_start":150,"line_end":150,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":8313,"byte_end":8326,"line_start":187,"line_end":187,"column_start":27,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":9173,"byte_end":9186,"line_start":208,"line_end":208,"column_start":28,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/discard-1.0.4/src/lib.rs","byte_start":9329,"byte_end":9342,"line_start":217,"line_end":217,"column_start":31,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":2111}}]}