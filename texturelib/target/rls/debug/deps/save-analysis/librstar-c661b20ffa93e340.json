{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1","program":"/Users/linkov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rstar","--edition=2018","/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=c661b20ffa93e340","-C","extra-filename=-c661b20ffa93e340","--out-dir","/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps","-L","dependency=/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps","--extern","num_traits=/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps/libnum_traits-d28d3cfff003bcad.rmeta","--extern","pdqselect=/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps/libpdqselect-c2733dde2c9ec062.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/linkov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/linkov/Documents/sdwr/texture-maker/texturelib/target/rls/debug/deps/librstar-c661b20ffa93e340.rmeta"},"prelude":{"crate_id":{"name":"rstar","disambiguator":[17600784458448832702,9500678815939557332]},"crate_root":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src","external_crates":[{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","num":15,"id":{"name":"num_traits","disambiguator":[8916209645052382407,2445784138089502816]}},{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","num":16,"id":{"name":"pdqselect","disambiguator":[4371300762064056184,3995990114462964906]}}],"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":0,"byte_end":1483,"line_start":1,"line_end":47,"column_start":1,"column_end":29}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/mod.rs","byte_start":90357,"byte_end":90361,"line_start":7,"line_end":7,"column_start":21,"column_end":25},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":579}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/mod.rs","byte_start":90394,"byte_end":90407,"line_start":8,"line_end":8,"column_start":32,"column_end":45},"alias_span":null,"name":"PointWithData","value":"","parent":{"krate":0,"index":579}},{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/mod.rs","byte_start":90434,"byte_end":90443,"line_start":9,"line_end":9,"column_start":26,"column_end":35},"alias_span":null,"name":"Rectangle","value":"","parent":{"krate":0,"index":579}},{"kind":"Use","ref_id":{"krate":0,"index":791},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1079,"byte_end":1083,"line_start":39,"line_end":39,"column_start":22,"column_end":26},"alias_span":null,"name":"AABB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1118,"byte_end":1140,"line_start":40,"line_end":40,"column_start":34,"column_end":56},"alias_span":null,"name":"RStarInsertionStrategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1189,"byte_end":1206,"line_start":41,"line_end":41,"column_start":48,"column_end":65},"alias_span":null,"name":"SelectionFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":441},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1233,"byte_end":1241,"line_start":42,"line_end":42,"column_start":26,"column_end":34},"alias_span":null,"name":"Envelope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":842},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1265,"byte_end":1275,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"ParentNode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1277,"byte_end":1286,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"RTreeNode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":488},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1313,"byte_end":1326,"line_start":44,"line_end":44,"column_start":25,"column_end":38},"alias_span":null,"name":"PointDistance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1328,"byte_end":1339,"line_start":44,"line_end":44,"column_start":40,"column_end":51},"alias_span":null,"name":"RTreeObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":852},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1366,"byte_end":1379,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"alias_span":null,"name":"DefaultParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1366,"byte_end":1379,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"alias_span":null,"name":"DefaultParams","value":"","parent":{"krate":0,"index":784}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1381,"byte_end":1398,"line_start":45,"line_end":45,"column_start":40,"column_end":57},"alias_span":null,"name":"InsertionStrategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1400,"byte_end":1411,"line_start":45,"line_end":45,"column_start":59,"column_end":70},"alias_span":null,"name":"RTreeParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1437,"byte_end":1442,"line_start":46,"line_end":46,"column_start":24,"column_end":29},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1444,"byte_end":1452,"line_start":46,"line_end":46,"column_start":31,"column_end":39},"alias_span":null,"name":"RTreeNum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1477,"byte_end":1482,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"alias_span":null,"name":"RTree","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":0,"byte_end":1483,"line_start":1,"line_end":47,"column_start":1,"column_end":29},"name":"","qualname":"::","value":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":61},{"krate":0,"index":437},{"krate":0,"index":459},{"krate":0,"index":479},{"krate":0,"index":501},{"krate":0,"index":525},{"krate":0,"index":579},{"krate":0,"index":660},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":1310},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" An n-dimensional r*-tree implementation.","sig":null,"attributes":[{"value":"! An n-dimensional r*-tree implementation.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":0,"byte_end":44,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":45,"byte_end":48,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate implements a flexible, n-dimensional r-tree implementation with","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":49,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! the r* (r star) insertion strategy.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":128,"byte_end":167,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":168,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # R-Tree","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":172,"byte_end":184,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"! An r-tree is a data structure containing _spatial data_ and is optimized for","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":185,"byte_end":265,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! nearest neighbor search.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":266,"byte_end":294,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"! _Spatial data_ refers to an object that has the notion of a position and extent,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":295,"byte_end":379,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"! for example points, lines and rectangles in any dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":380,"byte_end":442,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":443,"byte_end":446,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":447,"byte_end":450,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! # Further documentation","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":451,"byte_end":478,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"! The crate's main data structure and documentation is struct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":479,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! [RTree](struct.RTree.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":543,"byte_end":574,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":575,"byte_end":578,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Also, the pre-defined primitives like lines and rectangles contained in","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":579,"byte_end":654,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"! the [primitives module](primitives/index.html) may be of interest for a quick start.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":655,"byte_end":743,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":744,"byte_end":747,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # (De)Serialization","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":748,"byte_end":771,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"! Enable the `serde` feature for [Serde](https://crates.io/crates/serde) support.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":772,"byte_end":855,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":856,"byte_end":859,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":860,"byte_end":882,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":883,"byte_end":906,"line_start":24,"line_end":24,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2418,"byte_end":2422,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"AABB","qualname":"::aabb::AABB","value":"AABB {  }","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"decl_id":null,"docs":" An n-dimensional axis aligned bounding box (AABB).","sig":null,"attributes":[{"value":"/ An n-dimensional axis aligned bounding box (AABB).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1681,"byte_end":1735,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1736,"byte_end":1739,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An object's AABB is the smallest box totally encompassing an object","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1740,"byte_end":1811,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ while being aligned to the current coordinate system.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1812,"byte_end":1869,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ Although these structures are commonly called bounding _boxes_, they exist in any","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1870,"byte_end":1955,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1956,"byte_end":1970,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1971,"byte_end":1974,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note that AABBs cannot be inserted into r-trees. Use the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":1975,"byte_end":2035,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ [Rectangle](primitives/struct.Rectangle.html) struct for this purpose.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2036,"byte_end":2110,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2111,"byte_end":2114,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Type arguments","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2115,"byte_end":2135,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/ `P`: The struct is generic over which point type is used. Using an n-dimensional point","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2136,"byte_end":2226,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/ type will result in an n-dimensional bounding box.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2227,"byte_end":2281,"line_start":20,"line_end":20,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2582,"byte_end":2592,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"from_point","qualname":"<AABB<P>>::from_point","value":"pub fn from_point(P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the AABB encompassing a single point.\n","sig":null,"attributes":[{"value":"/ Returns the AABB encompassing a single point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2521,"byte_end":2570,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2826,"byte_end":2831,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"lower","qualname":"<AABB<P>>::lower","value":"pub fn lower(&Self) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the AABB's lower corner.","sig":null,"attributes":[{"value":"/ Returns the AABB's lower corner.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2656,"byte_end":2692,"line_start":40,"line_end":40,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2697,"byte_end":2700,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This is the point contained within the AABB with the smallest coordinate value in each","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2705,"byte_end":2795,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"/ dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2800,"byte_end":2814,"line_start":43,"line_end":43,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3045,"byte_end":3050,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"upper","qualname":"<AABB<P>>::upper","value":"pub fn upper(&Self) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the AABB's upper corner.","sig":null,"attributes":[{"value":"/ Returns the AABB's upper corner.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2876,"byte_end":2912,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2917,"byte_end":2920,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is the point contained within the AABB with the largest coordinate value in each","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2925,"byte_end":3014,"line_start":50,"line_end":50,"column_start":5,"column_end":94}},{"value":"/ dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3019,"byte_end":3033,"line_start":51,"line_end":51,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3154,"byte_end":3166,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"from_corners","qualname":"<AABB<P>>::from_corners","value":"pub fn from_corners(P, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new AABB encompassing two points.\n","sig":null,"attributes":[{"value":"/ Creates a new AABB encompassing two points.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3095,"byte_end":3142,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3374,"byte_end":3385,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"from_points","qualname":"<AABB<P>>::from_points","value":"pub fn from_points<'a, I>(I) -> Self where I: IntoIterator<Item = &'a P> + 'a,\nP: 'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new AABB encompassing a collection of points.\n","sig":null,"attributes":[{"value":"/ Creates a new AABB encompassing a collection of points.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3303,"byte_end":3362,"line_start":64,"line_end":64,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3978,"byte_end":3987,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"min_point","qualname":"<AABB<P>>::min_point","value":"pub fn min_point(&Self, &P) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the point within this AABB closest to a given point.","sig":null,"attributes":[{"value":"/ Returns the point within this AABB closest to a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3819,"byte_end":3883,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3888,"byte_end":3891,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If `point` is contained within the AABB, `point` will be returned.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":3896,"byte_end":3966,"line_start":84,"line_end":84,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":4173,"byte_end":4183,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"distance_2","qualname":"<AABB<P>>::distance_2","value":"pub fn distance_2(&Self, &P) -> P::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the squared distance to the AABB's [min_point](#method.min_point).\n","sig":null,"attributes":[{"value":"/ Returns the squared distance to the AABB's [min_point](#method.min_point).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":4083,"byte_end":4161,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/intersection_iterator.rs","byte_start":17113,"byte_end":17133,"line_start":7,"line_end":7,"column_start":12,"column_end":32},"name":"IntersectionIterator","qualname":"::algorithm::intersection_iterator::IntersectionIterator","value":"IntersectionIterator {  }","parent":null,"children":[{"krate":0,"index":130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":22228,"byte_end":22245,"line_start":18,"line_end":18,"column_start":12,"column_end":29},"name":"SelectionIterator","qualname":"::algorithm::iterators::SelectionIterator","value":"SelectionIterator {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":22505,"byte_end":22508,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectionIterator>::new","value":"pub fn new(&'a ParentNode<T>, Func) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":23713,"byte_end":23733,"line_start":72,"line_end":72,"column_start":12,"column_end":32},"name":"SelectionIteratorMut","qualname":"::algorithm::iterators::SelectionIteratorMut","value":"SelectionIteratorMut {  }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":24000,"byte_end":24003,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectionIteratorMut>::new","value":"pub fn new(&'a mut ParentNode<T>, Func) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":315},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44349,"byte_end":44371,"line_start":17,"line_end":17,"column_start":10,"column_end":32},"name":"RStarInsertionStrategy","qualname":"::algorithm::rstar::RStarInsertionStrategy","value":"pub enum RStarInsertionStrategy { }","parent":null,"children":[],"decl_id":null,"docs":" Inserts points according to the r-star heuristic.","sig":null,"attributes":[{"value":"/ Inserts points according to the r-star heuristic.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":43908,"byte_end":43961,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":43962,"byte_end":43965,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The r*-heuristic focusses on good insertion quality at the costs of","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":43966,"byte_end":44037,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ insertion performance. This strategy is best for use cases with few","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44038,"byte_end":44109,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ insertions and many nearest neighbor queries.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44110,"byte_end":44159,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44160,"byte_end":44163,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `RStarInsertionStrategy` is used as the default insertion strategy.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44164,"byte_end":44235,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ See [InsertionStrategy](trait.InsertionStrategy.html) for more information on insertion strategies.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44236,"byte_end":44339,"line_start":16,"line_end":16,"column_start":1,"column_end":104}}]},{"kind":"Trait","id":{"krate":0,"index":362},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56909,"byte_end":56926,"line_start":24,"line_end":24,"column_start":11,"column_end":28},"name":"SelectionFunction","qualname":"::algorithm::selection_functions::SelectionFunction","value":"SelectionFunction<T>","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" Advanced trait to iterate through an r-tree. Usually it should no be required to be implemented.","sig":null,"attributes":[{"value":"/ Advanced trait to iterate through an r-tree. Usually it should no be required to be implemented.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":55657,"byte_end":55757,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":55758,"byte_end":55761,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ It is important to know some details about the inner structure of","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":55762,"byte_end":55831,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ r-trees to comprehend this trait. Any node in an r-tree is either a *leaf* (containing exactly one `T: RTreeObject`) or","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":55832,"byte_end":55955,"line_start":9,"line_end":9,"column_start":1,"column_end":124}},{"value":"/ a *parent* (containing multiple nodes).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":55956,"byte_end":55999,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/ The main benefit of r-trees lies in their ability to efficiently guide searches through","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56000,"byte_end":56091,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ the tree. This is done by *pruning*: Knowing the envelopes of parent nodes","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56092,"byte_end":56170,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ often allows to completely skip them and all contained children during a search instead having","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56171,"byte_end":56269,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ to iterate through them, e.g. when searching for elements in a non-intersecting envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56270,"byte_end":56363,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ This often reduces the expected time from `O(n)` to `O(log(n))`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56364,"byte_end":56432,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56433,"byte_end":56436,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to define searches through the r-tree by defining if a node","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56437,"byte_end":56523,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ should be further investigated (\"unpacked\") or pruned.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56524,"byte_end":56582,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56583,"byte_end":56586,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Usually, the various `locate_[...]` methods of [`RTree`](struct.RTree.html) should cover most","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56587,"byte_end":56684,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ common searches. Otherwise, implementing `SelectionFunction` and using","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56685,"byte_end":56759,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ [`locate_with_selection_function`](struct.RTree.html#method.locate_with_selection_function)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56760,"byte_end":56855,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ can be used to tailor a custom search.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56856,"byte_end":56898,"line_start":23,"line_end":23,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57115,"byte_end":57135,"line_start":31,"line_end":31,"column_start":8,"column_end":28},"name":"should_unpack_parent","qualname":"::algorithm::selection_functions::SelectionFunction::should_unpack_parent","value":"pub fn should_unpack_parent(&Self, &T::Envelope) -> bool","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Return `true` if a parent node should be unpacked during a search.","sig":null,"attributes":[{"value":"/ Return `true` if a parent node should be unpacked during a search.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":56962,"byte_end":57032,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57037,"byte_end":57040,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The parent node's envelope is given to guide the decision.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57045,"byte_end":57107,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57265,"byte_end":57283,"line_start":34,"line_end":34,"column_start":8,"column_end":26},"name":"should_unpack_leaf","qualname":"::algorithm::selection_functions::SelectionFunction::should_unpack_leaf","value":"pub fn should_unpack_leaf(&Self, &T) -> bool","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" Returns `true` if a given child node should be returned during a search.\n","sig":null,"attributes":[{"value":"/ Returns `true` if a given child node should be returned during a search.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57181,"byte_end":57257,"line_start":33,"line_end":33,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57324,"byte_end":57348,"line_start":37,"line_end":37,"column_start":12,"column_end":36},"name":"SelectInEnvelopeFunction","qualname":"::algorithm::selection_functions::SelectInEnvelopeFunction","value":"SelectInEnvelopeFunction {  }","parent":null,"children":[{"krate":0,"index":368}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57485,"byte_end":57488,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectInEnvelopeFunction<T>>::new","value":"pub fn new(T::Envelope) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57930,"byte_end":57962,"line_start":66,"line_end":66,"column_start":12,"column_end":44},"name":"SelectInEnvelopeFuncIntersecting","qualname":"::algorithm::selection_functions::SelectInEnvelopeFuncIntersecting","value":"SelectInEnvelopeFuncIntersecting {  }","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58107,"byte_end":58110,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectInEnvelopeFuncIntersecting<T>>::new","value":"pub fn new(T::Envelope) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58548,"byte_end":58561,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"SelectAllFunc","qualname":"::algorithm::selection_functions::SelectAllFunc","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58909,"byte_end":58930,"line_start":112,"line_end":112,"column_start":12,"column_end":33},"name":"SelectAtPointFunction","qualname":"::algorithm::selection_functions::SelectAtPointFunction","value":"SelectAtPointFunction {  }","parent":null,"children":[{"krate":0,"index":394}],"decl_id":null,"docs":" A [trait.SelectionFunction] that only selects elements whose envelope\n contains a specific point.\n","sig":null,"attributes":[{"value":"/ A [trait.SelectionFunction] that only selects elements whose envelope","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58793,"byte_end":58866,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ contains a specific point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58867,"byte_end":58897,"line_start":111,"line_end":111,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59084,"byte_end":59087,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAtPointFunction<T>>::new","value":"pub fn new(<T::Envelope as Envelope>::Point) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":415},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":60329,"byte_end":60357,"line_start":173,"line_end":173,"column_start":12,"column_end":40},"name":"SelectWithinDistanceFunction","qualname":"::algorithm::selection_functions::SelectWithinDistanceFunction","value":"SelectWithinDistanceFunction {  }","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":60635,"byte_end":60638,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectWithinDistanceFunction<T>>::new","value":"pub fn new(<T::Envelope as Envelope>::Point,\n           <<T::Envelope as Envelope>::Point as Point>::Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":441},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62506,"byte_end":62514,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Envelope","qualname":"::envelope::Envelope","value":"Envelope: Clone + Copy + PartialEq + ::std::fmt::Debug","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457}],"decl_id":null,"docs":" An envelope type that encompasses some child nodes.","sig":null,"attributes":[{"value":"/ An envelope type that encompasses some child nodes.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62135,"byte_end":62190,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62191,"byte_end":62194,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ An envelope defines how different bounding boxes of inserted children in an r-tree can interact,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62195,"byte_end":62295,"line_start":5,"line_end":5,"column_start":1,"column_end":101}},{"value":"/ e.g. how they can be merged or intersected.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62296,"byte_end":62343,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/ This trait is not meant to be implemented by the user. Currently, only one implementation","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62344,"byte_end":62437,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/ exists ([AABB](struct.AABB.html)) and should be used.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62438,"byte_end":62495,"line_start":8,"line_end":8,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62607,"byte_end":62612,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Point","qualname":"::envelope::Envelope::Point","value":"type Point: Point;","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" The envelope's point type.\n","sig":null,"attributes":[{"value":"/ The envelope's point type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62567,"byte_end":62597,"line_start":10,"line_end":10,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62702,"byte_end":62711,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"new_empty","qualname":"::envelope::Envelope::new_empty","value":"pub fn new_empty() -> Self","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Creates a new, empty envelope that does not encompass any child.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty envelope that does not encompass any child.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62626,"byte_end":62694,"line_start":13,"line_end":13,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62798,"byte_end":62812,"line_start":17,"line_end":17,"column_start":8,"column_end":22},"name":"contains_point","qualname":"::envelope::Envelope::contains_point","value":"pub fn contains_point(&Self, &Self::Point) -> bool","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns true if a point is contained within this envelope.\n","sig":null,"attributes":[{"value":"/ Returns true if a point is contained within this envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62728,"byte_end":62790,"line_start":16,"line_end":16,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62935,"byte_end":62952,"line_start":20,"line_end":20,"column_start":8,"column_end":25},"name":"contains_envelope","qualname":"::envelope::Envelope::contains_envelope","value":"pub fn contains_envelope(&Self, &Self) -> bool","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns true if another envelope is _fully contained_ within `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if another envelope is _fully contained_ within `self`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62855,"byte_end":62927,"line_start":19,"line_end":19,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63042,"byte_end":63047,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"merge","qualname":"::envelope::Envelope::merge","value":"pub fn merge(&mut Self, &Self)","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Extends `self` to contain another envelope.\n","sig":null,"attributes":[{"value":"/ Extends `self` to contain another envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62987,"byte_end":63034,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63158,"byte_end":63164,"line_start":25,"line_end":25,"column_start":8,"column_end":14},"name":"merged","qualname":"::envelope::Envelope::merged","value":"pub fn merged(&Self, &Self) -> Self","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns the minimal envelope containing `self` and another envelope.\n","sig":null,"attributes":[{"value":"/ Returns the minimal envelope containing `self` and another envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63078,"byte_end":63150,"line_start":24,"line_end":24,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63275,"byte_end":63285,"line_start":28,"line_end":28,"column_start":8,"column_end":18},"name":"intersects","qualname":"::envelope::Envelope::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Sets `self` to the intersection of `self` and another envelope.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the intersection of `self` and another envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63200,"byte_end":63267,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63400,"byte_end":63417,"line_start":30,"line_end":30,"column_start":8,"column_end":25},"name":"intersection_area","qualname":"::envelope::Envelope::intersection_area","value":"pub fn intersection_area(&Self, &Self) -> <Self::Point as Point>::Scalar","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns the area of the intersection of `self` and another envelope.\n","sig":null,"attributes":[{"value":"/ Returns the area of the intersection of `self` and another envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63320,"byte_end":63392,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63540,"byte_end":63544,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"area","qualname":"::envelope::Envelope::area","value":"pub fn area(&Self) -> <Self::Point as Point>::Scalar","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns this envelope's area. Must be at least 0.\n","sig":null,"attributes":[{"value":"/ Returns this envelope's area. Must be at least 0.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63479,"byte_end":63532,"line_start":32,"line_end":32,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63660,"byte_end":63670,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"distance_2","qualname":"::envelope::Envelope::distance_2","value":"pub fn distance_2(&Self, &Self::Point) -> <Self::Point as Point>::Scalar","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns the euclidean distance to the envelope's border.\n","sig":null,"attributes":[{"value":"/ Returns the euclidean distance to the envelope's border.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63592,"byte_end":63652,"line_start":35,"line_end":35,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64243,"byte_end":64257,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"min_max_dist_2","qualname":"::envelope::Envelope::min_max_dist_2","value":"pub fn min_max_dist_2(&Self, &Self::Point) -> <Self::Point as Point>::Scalar","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns the squared min-max distance, a concept that helps to find nearest neighbors efficiently.","sig":null,"attributes":[{"value":"/ Returns the squared min-max distance, a concept that helps to find nearest neighbors efficiently.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63739,"byte_end":63840,"line_start":38,"line_end":38,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63845,"byte_end":63848,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Visually, if an AABB and a point are given, the min-max distance returns the distance at which we","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63853,"byte_end":63954,"line_start":40,"line_end":40,"column_start":5,"column_end":106}},{"value":"/ surely know an element must be present. This serves as an upper bound during nearest neighbor search.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":63959,"byte_end":64064,"line_start":41,"line_end":41,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64069,"byte_end":64072,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64077,"byte_end":64093,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ Roussopoulos, Nick, Stephen Kelley, and Frédéric Vincent. \"Nearest neighbor queries.\" ACM sigmod record. Vol. 24. No. 2. ACM, 1995.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64098,"byte_end":64235,"line_start":44,"line_end":44,"column_start":5,"column_end":140}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64374,"byte_end":64380,"line_start":48,"line_end":48,"column_start":8,"column_end":14},"name":"center","qualname":"::envelope::Envelope::center","value":"pub fn center(&Self) -> Self::Point","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns the envelope's center point.\n","sig":null,"attributes":[{"value":"/ Returns the envelope's center point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64326,"byte_end":64366,"line_start":47,"line_end":47,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64478,"byte_end":64493,"line_start":51,"line_end":51,"column_start":8,"column_end":23},"name":"perimeter_value","qualname":"::envelope::Envelope::perimeter_value","value":"pub fn perimeter_value(&Self) -> <Self::Point as Point>::Scalar","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Returns a value proportional to the envelope's perimeter.\n","sig":null,"attributes":[{"value":"/ Returns a value proportional to the envelope's perimeter.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64409,"byte_end":64470,"line_start":50,"line_end":50,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64621,"byte_end":64635,"line_start":54,"line_end":54,"column_start":8,"column_end":22},"name":"sort_envelopes","qualname":"::envelope::Envelope::sort_envelopes","value":"pub fn sort_envelopes<T: RTreeObject<Envelope = Self>>(usize, &mut [T])","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Sorts a given set of objects with envelopes along one of their axis.\n","sig":null,"attributes":[{"value":"/ Sorts a given set of objects with envelopes along one of their axis.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64541,"byte_end":64613,"line_start":53,"line_end":53,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64906,"byte_end":64925,"line_start":60,"line_end":60,"column_start":8,"column_end":27},"name":"partition_envelopes","qualname":"::envelope::Envelope::partition_envelopes","value":"pub fn partition_envelopes<T: RTreeObject<Envelope =\n                           Self>>(usize, &mut [T], usize)","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":" Partitions objects with an envelopes along a certain axis.","sig":null,"attributes":[{"value":"/ Partitions objects with an envelopes along a certain axis.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64709,"byte_end":64771,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64776,"byte_end":64779,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ After calling this, envelopes[0..selection_size] are all smaller","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64784,"byte_end":64852,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ than envelopes[selection_size + 1..].","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":64857,"byte_end":64898,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":830},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65717,"byte_end":65721,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Leaf","qualname":"::node::RTreeNode::Leaf","value":"RTreeNode::Leaf(T)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" A leaf node, only containing the r-tree object\n","sig":null,"attributes":[{"value":"/ A leaf node, only containing the r-tree object","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65662,"byte_end":65712,"line_start":25,"line_end":25,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":833},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65783,"byte_end":65789,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Parent","qualname":"::node::RTreeNode::Parent","value":"RTreeNode::Parent(ParentNode<T>)","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" A parent node containing several child nodes\n","sig":null,"attributes":[{"value":"/ A parent node containing several child nodes","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65730,"byte_end":65778,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":828},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65617,"byte_end":65626,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"RTreeNode","qualname":"::node::RTreeNode","value":"pub enum RTreeNode<T> where T: RTreeObject {\n\n    /// A leaf node, only containing the r-tree object\n    Leaf(T),\n\n    /// A parent node containing several child nodes\n    Parent(ParentNode<T>),\n}","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":833}],"decl_id":null,"docs":" An internal tree node.","sig":null,"attributes":[{"value":"/ An internal tree node.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65510,"byte_end":65536,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65537,"byte_end":65540,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For most applications, using this type should not be required.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65541,"byte_end":65607,"line_start":20,"line_end":20,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":842},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66097,"byte_end":66107,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"ParentNode","qualname":"::node::ParentNode","value":"ParentNode {  }","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Represents an internal parent node.","sig":null,"attributes":[{"value":"/ Represents an internal parent node.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65809,"byte_end":65848,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65849,"byte_end":65852,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ For most applications, using this type should not be required. Allows read access to this","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65853,"byte_end":65946,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ node's envelope and its children.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":65947,"byte_end":65984,"line_start":34,"line_end":34,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66591,"byte_end":66598,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"is_leaf","qualname":"<RTreeNode<T>>::is_leaf","value":"pub fn is_leaf(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66839,"byte_end":66847,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"children","qualname":"<ParentNode<T>>::children","value":"pub fn children(&Self) -> &[RTreeNode<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns this node's children\n","sig":null,"attributes":[{"value":"/ Returns this node's children","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66795,"byte_end":66827,"line_start":76,"line_end":76,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66986,"byte_end":66994,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"envelope","qualname":"<ParentNode<T>>::envelope","value":"pub fn envelope(&Self) -> T::Envelope","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest envelope that encompasses all children.\n","sig":null,"attributes":[{"value":"/ Returns the smallest envelope that encompasses all children.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66910,"byte_end":66974,"line_start":81,"line_end":81,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":485},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71629,"byte_end":71640,"line_start":79,"line_end":79,"column_start":11,"column_end":22},"name":"RTreeObject","qualname":"::object::RTreeObject","value":"RTreeObject","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"decl_id":null,"docs":" An object that can be inserted into an r-tree.","sig":null,"attributes":[{"value":"/ An object that can be inserted into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69226,"byte_end":69276,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69277,"byte_end":69280,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait must be implemented for any object that should be inserted into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69281,"byte_end":69370,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/ Some simple objects that already implement this trait can be found in the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69371,"byte_end":69448,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ [primitives](primitives/index.html) module.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69449,"byte_end":69496,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69497,"byte_end":69500,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The only property required of such an object is its [envelope](traits.Envelope.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69501,"byte_end":69590,"line_start":11,"line_end":11,"column_start":1,"column_end":90}},{"value":"/ Most simply, this method should return the [axis aligned bounding box](struct.AABB.html)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69591,"byte_end":69683,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"/ of the object, other envelope types may be supported in the future.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69684,"byte_end":69755,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69756,"byte_end":69759,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Note*: It is a logic error if an objects envelope changes after insertion into","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69760,"byte_end":69843,"line_start":15,"line_end":15,"column_start":1,"column_end":84}},{"value":"/ an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69844,"byte_end":69858,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69859,"byte_end":69862,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69863,"byte_end":69884,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/ `Envelope`: The objects envelope type. At the moment, only [AABB](struct.AABB.html) is","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69885,"byte_end":69975,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/ feasible.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69976,"byte_end":69989,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69990,"byte_end":69993,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example implementation","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":69994,"byte_end":70022,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70023,"byte_end":70030,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use rstar::{RTreeObject, AABB};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70031,"byte_end":70066,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70067,"byte_end":70070,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ struct Player","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70071,"byte_end":70088,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70089,"byte_end":70094,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/     name: String,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70095,"byte_end":70116,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/     x_coordinate: f64,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70117,"byte_end":70143,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/     y_coordinate: f64","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70144,"byte_end":70169,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70170,"byte_end":70175,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70176,"byte_end":70179,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ impl RTreeObject for Player","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70180,"byte_end":70211,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70212,"byte_end":70217,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/     type Envelope = AABB<[f64; 2]>;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70218,"byte_end":70257,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70258,"byte_end":70261,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     fn envelope(&self) -> Self::Envelope","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70262,"byte_end":70306,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/     {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70307,"byte_end":70316,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/         AABB::from_point([self.x_coordinate, self.y_coordinate])","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70317,"byte_end":70385,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70386,"byte_end":70395,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70396,"byte_end":70401,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70402,"byte_end":70405,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ fn main()","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70406,"byte_end":70419,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70420,"byte_end":70425,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/     use rstar::{RTree, AABB};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70426,"byte_end":70459,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70460,"byte_end":70463,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     let mut tree = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70464,"byte_end":70500,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70501,"byte_end":70504,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // Insert a few players...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70505,"byte_end":70539,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/     tree.insert(Player {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70540,"byte_end":70568,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/         name: \"Forlorn Freeman\".into(),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70569,"byte_end":70612,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/         x_coordinate: 1.,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70613,"byte_end":70642,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/         y_coordinate: 0.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70643,"byte_end":70671,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/     });","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70672,"byte_end":70683,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/     tree.insert(Player {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70684,"byte_end":70712,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/         name: \"Sarah Croft\".into(),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70713,"byte_end":70752,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/         x_coordinate: 0.5,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70753,"byte_end":70783,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/         y_coordinate: 0.5,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70784,"byte_end":70814,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70815,"byte_end":70826,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/     tree.insert(Player {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70827,"byte_end":70855,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/         name: \"Geralt of Trivia\".into(),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70856,"byte_end":70900,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/         x_coordinate: 0.,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70901,"byte_end":70930,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/         y_coordinate: 2.,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70931,"byte_end":70960,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     });","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70961,"byte_end":70972,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70973,"byte_end":70976,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // Now we are ready to ask some questions!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":70977,"byte_end":71027,"line_start":66,"line_end":66,"column_start":1,"column_end":51}},{"value":"/     let envelope = AABB::from_point([0.5, 0.5]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71028,"byte_end":71080,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/     let likely_sarah_croft = tree.locate_in_envelope(&envelope).next();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71081,"byte_end":71156,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/     println!(\"Found {:?} lurking around at (0.5, 0.5)!\", likely_sarah_croft.unwrap().name);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71157,"byte_end":71252,"line_start":69,"line_end":69,"column_start":1,"column_end":96}},{"value":"/     # assert!(likely_sarah_croft.is_some());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71253,"byte_end":71301,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71302,"byte_end":71305,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     let unit_square = AABB::from_corners([-1.0, -1.0], [1., 1.]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71306,"byte_end":71375,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/     for player in tree.locate_in_envelope(&unit_square) {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71376,"byte_end":71437,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/        println!(\"And here is {:?} spelunking in the unit square.\", player.name);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71438,"byte_end":71522,"line_start":74,"line_end":74,"column_start":1,"column_end":85}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71523,"byte_end":71532,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/     # assert_eq!(tree.locate_in_envelope(&unit_square).count(), 2);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71533,"byte_end":71604,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71605,"byte_end":71610,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71611,"byte_end":71618,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":486},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71807,"byte_end":71815,"line_start":82,"line_end":82,"column_start":10,"column_end":18},"name":"Envelope","qualname":"::object::RTreeObject::Envelope","value":"type Envelope: Envelope;","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" The object's envelope type. Usually, [AABB](struct.AABB.html) will be the right choice.\n This type also defines the objects dimensionality.\n","sig":null,"attributes":[{"value":"/ The object's envelope type. Usually, [AABB](struct.AABB.html) will be the right choice.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71647,"byte_end":71738,"line_start":80,"line_end":80,"column_start":5,"column_end":96}},{"value":"/ This type also defines the objects dimensionality.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71743,"byte_end":71797,"line_start":81,"line_end":81,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71976,"byte_end":71984,"line_start":87,"line_end":87,"column_start":8,"column_end":16},"name":"envelope","qualname":"::object::RTreeObject::envelope","value":"pub fn envelope(&Self) -> Self::Envelope","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Returns the object's envelope.","sig":null,"attributes":[{"value":"/ Returns the object's envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71832,"byte_end":71866,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71871,"byte_end":71874,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Usually, this will return the object's [axis aligned bounding box](struct.AABB.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":71879,"byte_end":71968,"line_start":86,"line_end":86,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":488},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74073,"byte_end":74086,"line_start":152,"line_end":152,"column_start":11,"column_end":24},"name":"PointDistance","qualname":"::object::PointDistance","value":"PointDistance: RTreeObject","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" Defines objects which can calculate their minimal distance to a point.","sig":null,"attributes":[{"value":"/ Defines objects which can calculate their minimal distance to a point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72014,"byte_end":72088,"line_start":90,"line_end":90,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72089,"byte_end":72092,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This trait is most notably necessary for support of [nearest_neighbor](struct.RTree#method.nearest_neighbor)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72093,"byte_end":72205,"line_start":92,"line_end":92,"column_start":1,"column_end":113}},{"value":"/ queries.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72206,"byte_end":72218,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72219,"byte_end":72222,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72223,"byte_end":72236,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72237,"byte_end":72244,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ use rstar::{RTreeObject, PointDistance, AABB};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72245,"byte_end":72295,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72296,"byte_end":72299,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ struct Circle","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72300,"byte_end":72317,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72318,"byte_end":72323,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/     origin: [f32; 2],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72324,"byte_end":72349,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/     radius: f32,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72350,"byte_end":72370,"line_start":102,"line_end":102,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72371,"byte_end":72376,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72377,"byte_end":72380,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ impl RTreeObject for Circle {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72381,"byte_end":72414,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/     type Envelope = AABB<[f32; 2]>;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72415,"byte_end":72454,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72455,"byte_end":72458,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     fn envelope(&self) -> Self::Envelope {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72459,"byte_end":72505,"line_start":108,"line_end":108,"column_start":1,"column_end":47}},{"value":"/         let corner_1 = [self.origin[0] - self.radius, self.origin[1] - self.radius];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72506,"byte_end":72594,"line_start":109,"line_end":109,"column_start":1,"column_end":89}},{"value":"/         let corner_2 = [self.origin[0] + self.radius, self.origin[1] + self.radius];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72595,"byte_end":72683,"line_start":110,"line_end":110,"column_start":1,"column_end":89}},{"value":"/         AABB::from_corners(corner_1, corner_2)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72684,"byte_end":72734,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72735,"byte_end":72744,"line_start":112,"line_end":112,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72745,"byte_end":72750,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72751,"byte_end":72754,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ impl PointDistance for Circle","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72755,"byte_end":72788,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72789,"byte_end":72794,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/     fn distance_2(&self, point: &[f32; 2]) -> f32","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72795,"byte_end":72848,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/     {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72849,"byte_end":72858,"line_start":118,"line_end":118,"column_start":1,"column_end":10}},{"value":"/         let d_x = self.origin[0] - point[0];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72859,"byte_end":72907,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"/         let d_y = self.origin[1] - point[1];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72908,"byte_end":72956,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/         let distance_to_origin = (d_x * d_x + d_y * d_y).sqrt();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":72957,"byte_end":73025,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/         let distance_to_ring = distance_to_origin - self.radius;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73026,"byte_end":73094,"line_start":122,"line_end":122,"column_start":1,"column_end":69}},{"value":"/         let distance_to_circle = f32::max(0.0, distance_to_ring);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73095,"byte_end":73164,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/         // We must return the squared distance!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73165,"byte_end":73216,"line_start":124,"line_end":124,"column_start":1,"column_end":52}},{"value":"/         distance_to_circle * distance_to_circle","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73217,"byte_end":73268,"line_start":125,"line_end":125,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73269,"byte_end":73278,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73279,"byte_end":73282,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // This implementation is not required but more efficient since it","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73283,"byte_end":73357,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/     // omits the calculation of a square root","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73358,"byte_end":73407,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"/     fn contains_point(&self, point: &[f32; 2]) -> bool","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73408,"byte_end":73466,"line_start":130,"line_end":130,"column_start":1,"column_end":59}},{"value":"/     {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73467,"byte_end":73476,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/         let d_x = self.origin[0] - point[0];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73477,"byte_end":73525,"line_start":132,"line_end":132,"column_start":1,"column_end":49}},{"value":"/         let d_y = self.origin[1] - point[1];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73526,"byte_end":73574,"line_start":133,"line_end":133,"column_start":1,"column_end":49}},{"value":"/         let distance_to_origin_2 = (d_x * d_x + d_y * d_y);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73575,"byte_end":73638,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"/         let radius_2 = self.radius * self.radius;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73639,"byte_end":73692,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/         distance_to_origin_2 <= radius_2","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73693,"byte_end":73737,"line_start":136,"line_end":136,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73738,"byte_end":73747,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73748,"byte_end":73753,"line_start":138,"line_end":138,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73754,"byte_end":73757,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73758,"byte_end":73761,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73762,"byte_end":73777,"line_start":141,"line_end":141,"column_start":1,"column_end":16}},{"value":"/     let circle = Circle {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73778,"byte_end":73807,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/         origin: [1.0, 0.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73808,"byte_end":73839,"line_start":143,"line_end":143,"column_start":1,"column_end":32}},{"value":"/         radius: 1.0,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73840,"byte_end":73864,"line_start":144,"line_end":144,"column_start":1,"column_end":25}},{"value":"/     };","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73865,"byte_end":73875,"line_start":145,"line_end":145,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73876,"byte_end":73879,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(circle.distance_2(&[-1.0, 0.0]), 1.0);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73880,"byte_end":73937,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/     assert_eq!(circle.distance_2(&[-2.0, 0.0]), 4.0);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73938,"byte_end":73995,"line_start":148,"line_end":148,"column_start":1,"column_end":58}},{"value":"/     assert!(circle.contains_point(&[1.0, 0.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":73996,"byte_end":74048,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74049,"byte_end":74054,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74055,"byte_end":74062,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74181,"byte_end":74191,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"distance_2","qualname":"::object::PointDistance::distance_2","value":"pub fn distance_2(&Self, &<Self::Envelope as Envelope>::Point)\n-> <<Self::Envelope as Envelope>::Point as Point>::Scalar","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Returns the squared euclidean distance of an object to a point.\n","sig":null,"attributes":[{"value":"/ Returns the squared euclidean distance of an object to a point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74106,"byte_end":74173,"line_start":153,"line_end":153,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74687,"byte_end":74701,"line_start":164,"line_end":164,"column_start":8,"column_end":22},"name":"contains_point","qualname":"::object::PointDistance::contains_point","value":"pub fn contains_point(&Self, &<Self::Envelope as Envelope>::Point) -> bool","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Returns true if a point is contained within this object.","sig":null,"attributes":[{"value":"/ Returns true if a point is contained within this object.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74331,"byte_end":74391,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74396,"byte_end":74399,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ By default, any point returning a `distance_2` less than or equal to zero is considered to be","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74404,"byte_end":74501,"line_start":161,"line_end":161,"column_start":5,"column_end":102}},{"value":"/ contained within `self`. Changing this default behavior is advised if calculating the squared distance","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74506,"byte_end":74612,"line_start":162,"line_end":162,"column_start":5,"column_end":111}},{"value":"/ is more computational expensive a point containment check.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74617,"byte_end":74679,"line_start":163,"line_end":163,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75536,"byte_end":75563,"line_start":181,"line_end":181,"column_start":8,"column_end":35},"name":"distance_2_if_less_or_equal","qualname":"::object::PointDistance::distance_2_if_less_or_equal","value":"pub fn distance_2_if_less_or_equal(&Self,\n                                   &<Self::Envelope as Envelope>::Point,\n                                   <<Self::Envelope as Envelope>::Point as\n                                   Point>::Scalar)\n-> Option<<<Self::Envelope as Envelope>::Point as Point>::Scalar>","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Returns the squared distance to this object or `None` if the distance\n is larger than a given maximum value.","sig":null,"attributes":[{"value":"/ Returns the squared distance to this object or `None` if the distance","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74828,"byte_end":74901,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ is larger than a given maximum value.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74906,"byte_end":74947,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74952,"byte_end":74955,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Some algorithms do need to know an object's distance only","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74960,"byte_end":75021,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/ if it is less than or equal to a maximum value. In these cases, it may be","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75026,"byte_end":75103,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ faster to calculate a lower bound of the distance first and returning","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75108,"byte_end":75181,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ early if the object cannot be closer than the given maximum.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75186,"byte_end":75250,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75255,"byte_end":75258,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The provided default implementation will use the distance to the object's","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75263,"byte_end":75340,"line_start":176,"line_end":176,"column_start":5,"column_end":82}},{"value":"/ envelope as a lower bound.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75345,"byte_end":75375,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75380,"byte_end":75383,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If performance is critical and the object's distance calculation is fast,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75388,"byte_end":75465,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ it may be beneficial to overwrite this implementation.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":75470,"byte_end":75528,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":508},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78314,"byte_end":78325,"line_start":37,"line_end":37,"column_start":11,"column_end":22},"name":"RTreeParams","qualname":"::params::RTreeParams","value":"RTreeParams: Send + Sync","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" Defines static parameters for an r-tree.","sig":null,"attributes":[{"value":"/ Defines static parameters for an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77028,"byte_end":77072,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77073,"byte_end":77076,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Internally, an r-tree contains several nodes, similar to a b-tree. These parameters change","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77077,"byte_end":77171,"line_start":6,"line_end":6,"column_start":1,"column_end":95}},{"value":"/ the size of these nodes and can be used to fine tune the tree's performance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77172,"byte_end":77252,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77253,"byte_end":77256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77257,"byte_end":77270,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77271,"byte_end":77278,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use rstar::{RTreeParams, RTree, RStarInsertionStrategy};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77279,"byte_end":77339,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77340,"byte_end":77343,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // This example uses an rtree with larger internal nodes.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77344,"byte_end":77405,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/ struct LargeNodeParameters;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77406,"byte_end":77437,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77438,"byte_end":77441,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ impl RTreeParams for LargeNodeParameters","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77442,"byte_end":77486,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77487,"byte_end":77492,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/     const MIN_SIZE: usize = 10;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77493,"byte_end":77528,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/     const MAX_SIZE: usize = 30;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77529,"byte_end":77564,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/     const REINSERTION_COUNT: usize = 5;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77565,"byte_end":77608,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/     type DefaultInsertionStrategy = RStarInsertionStrategy;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77609,"byte_end":77672,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77673,"byte_end":77678,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77679,"byte_end":77682,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Optional but helpful: Define a type alias for the new r-tree","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77683,"byte_end":77750,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ type LargeNodeRTree<T> = RTree<T, LargeNodeParameters>;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77751,"byte_end":77810,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77811,"byte_end":77814,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77815,"byte_end":77832,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ // The only difference from now on is the usage of \"new_with_params\" instead of \"new\"","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77833,"byte_end":77922,"line_start":28,"line_end":28,"column_start":1,"column_end":90}},{"value":"/ let mut large_node_tree: LargeNodeRTree<_> = RTree::new_with_params();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77923,"byte_end":77997,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ // Using the r-tree should allow inference for the point type","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":77998,"byte_end":78063,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/ large_node_tree.insert([1.0, -1.0f32]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78064,"byte_end":78107,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ // There is also a bulk load method with parameters:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78108,"byte_end":78164,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"/ # let some_elements = vec![[0.0, 0.0]];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78165,"byte_end":78208,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ let tree: LargeNodeRTree<_> = RTree::bulk_load_with_params(some_elements);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78209,"byte_end":78287,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78288,"byte_end":78295,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78296,"byte_end":78303,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":509},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78652,"byte_end":78660,"line_start":42,"line_end":42,"column_start":11,"column_end":19},"name":"MIN_SIZE","qualname":"::params::RTreeParams::MIN_SIZE","value":"usize","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" The minimum size of an internal node. Must be at most half as large as `MAX_SIZE`.\n Choosing a value around one half or one third of `MAX_SIZE` is recommended. Higher\n values should yield slightly better tree quality while lower values may benefit\n insertion performance.\n","sig":null,"attributes":[{"value":"/ The minimum size of an internal node. Must be at most half as large as `MAX_SIZE`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78345,"byte_end":78431,"line_start":38,"line_end":38,"column_start":5,"column_end":91}},{"value":"/ Choosing a value around one half or one third of `MAX_SIZE` is recommended. Higher","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78436,"byte_end":78522,"line_start":39,"line_end":39,"column_start":5,"column_end":91}},{"value":"/ values should yield slightly better tree quality while lower values may benefit","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78527,"byte_end":78610,"line_start":40,"line_end":40,"column_start":5,"column_end":88}},{"value":"/ insertion performance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78615,"byte_end":78641,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":510},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78820,"byte_end":78828,"line_start":46,"line_end":46,"column_start":11,"column_end":19},"name":"MAX_SIZE","qualname":"::params::RTreeParams::MAX_SIZE","value":"usize","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" The maximum size of an internal node. Larger values will improve insertion performance\n but increase the average query time.\n","sig":null,"attributes":[{"value":"/ The maximum size of an internal node. Larger values will improve insertion performance","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78674,"byte_end":78764,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ but increase the average query time.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78769,"byte_end":78809,"line_start":45,"line_end":45,"column_start":5,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":511},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79095,"byte_end":79112,"line_start":51,"line_end":51,"column_start":11,"column_end":28},"name":"REINSERTION_COUNT","qualname":"::params::RTreeParams::REINSERTION_COUNT","value":"usize","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" The number of nodes that the insertion strategy tries to reinsert sometimes to\n maintain a good tree quality. Must be smaller than `MAX_SIZE` - `MIN_SIZE`.\n Larger values will improve query times but increase insertion time.\n","sig":null,"attributes":[{"value":"/ The number of nodes that the insertion strategy tries to reinsert sometimes to","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78842,"byte_end":78924,"line_start":48,"line_end":48,"column_start":5,"column_end":87}},{"value":"/ maintain a good tree quality. Must be smaller than `MAX_SIZE` - `MIN_SIZE`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78929,"byte_end":79008,"line_start":49,"line_end":49,"column_start":5,"column_end":84}},{"value":"/ Larger values will improve query times but increase insertion time.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79013,"byte_end":79084,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79232,"byte_end":79256,"line_start":54,"line_end":54,"column_start":10,"column_end":34},"name":"DefaultInsertionStrategy","qualname":"::params::RTreeParams::DefaultInsertionStrategy","value":"type DefaultInsertionStrategy: InsertionStrategy;","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" The insertion strategy which is used when calling [insert](struct.RTree.html#method.insert).\n","sig":null,"attributes":[{"value":"/ The insertion strategy which is used when calling [insert](struct.RTree.html#method.insert).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79126,"byte_end":79222,"line_start":53,"line_end":53,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":852},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79414,"byte_end":79427,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"DefaultParams","qualname":"::params::DefaultParams","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default parameters used when creating an r-tree without specific parameters.\n","sig":null,"attributes":[{"value":"/ The default parameters used when creating an r-tree without specific parameters.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79280,"byte_end":79364,"line_start":57,"line_end":57,"column_start":1,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":518},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80335,"byte_end":80352,"line_start":80,"line_end":80,"column_start":11,"column_end":28},"name":"InsertionStrategy","qualname":"::params::InsertionStrategy","value":"InsertionStrategy","parent":null,"children":[{"krate":0,"index":519}],"decl_id":null,"docs":" Defines how points are inserted into an r-tree.","sig":null,"attributes":[{"value":"/ Defines how points are inserted into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79632,"byte_end":79683,"line_start":68,"line_end":68,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79684,"byte_end":79687,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Different strategies try to minimize both _insertion time_ (how long does it take to add a new","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79688,"byte_end":79786,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"/ object into the tree?) and _querying time_ (how long does an average nearest neighbor query","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79787,"byte_end":79882,"line_start":71,"line_end":71,"column_start":1,"column_end":96}},{"value":"/ take?).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79883,"byte_end":79894,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ Currently, only one insertion strategy is implemented: R* (R-star) insertion. R* insertion","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79895,"byte_end":79989,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ tries to minimize querying performance while yielding reasonable insertion times, making it a","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79990,"byte_end":80087,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ good default strategy. More strategies might be implemented in the future.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80088,"byte_end":80166,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80167,"byte_end":80170,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Only calls to [insert](struct.RTree.html#method.insert) are affected by this strategy.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80171,"byte_end":80261,"line_start":77,"line_end":77,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80262,"byte_end":80265,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This trait is not meant to be implemented by the user.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80266,"byte_end":80324,"line_start":79,"line_end":79,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":80381,"byte_end":80387,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"insert","qualname":"::params::InsertionStrategy::insert","value":"pub fn insert<T, Params>(&mut RTree<T, Params>, T) where Params: RTreeParams,\nT: RTreeObject","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":532},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84282,"byte_end":84290,"line_start":99,"line_end":99,"column_start":11,"column_end":19},"name":"RTreeNum","qualname":"::point::RTreeNum","value":"RTreeNum: Bounded + Num + Clone + Copy + Signed + PartialOrd + Debug","parent":null,"children":[],"decl_id":null,"docs":" Defines a number type that is compatible with rstar.","sig":null,"attributes":[{"value":"/ Defines a number type that is compatible with rstar.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81314,"byte_end":81370,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81371,"byte_end":81374,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ rstar works out of the box with the following standard library types:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81375,"byte_end":81448,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/  - i32","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81449,"byte_end":81459,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/  - i64","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81460,"byte_end":81470,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/  - f32","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81471,"byte_end":81481,"line_start":9,"line_end":9,"column_start":1,"column_end":11}},{"value":"/  - f64","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81482,"byte_end":81492,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81493,"byte_end":81496,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type cannot be implemented directly. Instead, it is just required to implement","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81497,"byte_end":81584,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/ all required traits from the `num_traits` crate.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81585,"byte_end":81637,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81638,"byte_end":81641,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81642,"byte_end":81655,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81656,"byte_end":81663,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # extern crate num_traits;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81664,"byte_end":81694,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use num_traits::{Bounded, Num, Signed};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81695,"byte_end":81738,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81739,"byte_end":81742,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Copy, PartialEq, PartialOrd, Debug)]","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81743,"byte_end":81799,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/ struct MyFancyNumberType(f32);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81800,"byte_end":81834,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81835,"byte_end":81838,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ impl Bounded for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81839,"byte_end":81879,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/   // ... details hidden ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81880,"byte_end":81911,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ # fn min_value() -> Self { MyFancyNumberType(Bounded::min_value()) }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81912,"byte_end":81984,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81985,"byte_end":81990,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # fn max_value() -> Self { MyFancyNumberType(Bounded::max_value()) }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":81991,"byte_end":82063,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82064,"byte_end":82069,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82070,"byte_end":82073,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl Signed for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82074,"byte_end":82113,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/   // ... details hidden ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82114,"byte_end":82145,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # fn abs(&self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82146,"byte_end":82194,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82195,"byte_end":82200,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn abs_sub(&self, other: &Self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82201,"byte_end":82267,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82268,"byte_end":82273,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # fn signum(&self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82274,"byte_end":82325,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82326,"byte_end":82331,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # fn is_positive(&self) -> bool { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82332,"byte_end":82388,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82389,"byte_end":82394,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # fn is_negative(&self) -> bool { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82395,"byte_end":82451,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82452,"byte_end":82457,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82458,"byte_end":82461,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ impl Num for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82462,"byte_end":82498,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/   // ... details hidden ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82499,"byte_end":82530,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ # type FromStrRadixErr = num_traits::ParseFloatError;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82531,"byte_end":82588,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ # fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82589,"byte_end":82695,"line_start":46,"line_end":46,"column_start":1,"column_end":107}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82696,"byte_end":82701,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82702,"byte_end":82705,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // There's a lot of traits that are still missing to make the above code compile,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82706,"byte_end":82791,"line_start":49,"line_end":49,"column_start":1,"column_end":86}},{"value":"/ // let's assume they are implemented. MyFancyNumberType type now readily implements","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82792,"byte_end":82879,"line_start":50,"line_end":50,"column_start":1,"column_end":88}},{"value":"/ // RTreeNum and can be used with r-trees:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82880,"byte_end":82925,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/ # fn main() {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82926,"byte_end":82943,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82944,"byte_end":82965,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/ let mut rtree = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":82966,"byte_end":82999,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/ rtree.insert([MyFancyNumberType(0.0), MyFancyNumberType(0.0)]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83000,"byte_end":83067,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83068,"byte_end":83075,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83076,"byte_end":83079,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # impl num_traits::Zero for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83080,"byte_end":83131,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ #   fn zero() -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83132,"byte_end":83178,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/ #   fn is_zero(&self) -> bool { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83179,"byte_end":83233,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83234,"byte_end":83241,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83242,"byte_end":83247,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ # impl num_traits::One for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83248,"byte_end":83298,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/ #   fn one() -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83299,"byte_end":83344,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83345,"byte_end":83352,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83353,"byte_end":83358,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # impl std::ops::Mul for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83359,"byte_end":83407,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ #   type Output = Self;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83408,"byte_end":83435,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/ #   fn mul(self, rhs: Self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83436,"byte_end":83496,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83497,"byte_end":83504,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83505,"byte_end":83510,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ # impl std::ops::Add for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83511,"byte_end":83559,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ #   type Output = Self;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83560,"byte_end":83587,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/ #   fn add(self, rhs: Self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83588,"byte_end":83648,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83649,"byte_end":83656,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83657,"byte_end":83662,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ # impl std::ops::Sub for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83663,"byte_end":83711,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/ #   type Output = Self;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83712,"byte_end":83739,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/ #   fn sub(self, rhs: Self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83740,"byte_end":83800,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83801,"byte_end":83808,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83809,"byte_end":83814,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ # impl std::ops::Div for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83815,"byte_end":83863,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/ #   type Output = Self;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83864,"byte_end":83891,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/ #   fn div(self, rhs: Self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83892,"byte_end":83952,"line_start":84,"line_end":84,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83953,"byte_end":83960,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83961,"byte_end":83966,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ # impl std::ops::Rem for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":83967,"byte_end":84015,"line_start":87,"line_end":87,"column_start":1,"column_end":49}},{"value":"/ #   type Output = Self;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84016,"byte_end":84043,"line_start":88,"line_end":88,"column_start":1,"column_end":28}},{"value":"/ #   fn rem(self, rhs: Self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84044,"byte_end":84104,"line_start":89,"line_end":89,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84105,"byte_end":84112,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84113,"byte_end":84118,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # impl std::ops::Neg for MyFancyNumberType {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84119,"byte_end":84167,"line_start":92,"line_end":92,"column_start":1,"column_end":49}},{"value":"/ #   type Output = Self;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84168,"byte_end":84195,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/ #   fn neg(self) -> Self { unimplemented!() }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84196,"byte_end":84245,"line_start":94,"line_end":94,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84246,"byte_end":84253,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84254,"byte_end":84259,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84260,"byte_end":84267,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84268,"byte_end":84271,"line_start":98,"line_end":98,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":535},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85854,"byte_end":85859,"line_start":157,"line_end":157,"column_start":11,"column_end":16},"name":"Point","qualname":"::point::Point","value":"Point: Copy + Clone + PartialEq + Debug","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":541}],"decl_id":null,"docs":" Defines a point type that is compatible with rstar.","sig":null,"attributes":[{"value":"/ Defines a point type that is compatible with rstar.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84450,"byte_end":84505,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84506,"byte_end":84509,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This trait should be used for interoperability with other point types, not to define custom objects","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84510,"byte_end":84613,"line_start":105,"line_end":105,"column_start":1,"column_end":104}},{"value":"/ that can be inserted into r-trees. Use [`RTreeObject`](trait.RTreeObject.html) or","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84614,"byte_end":84699,"line_start":106,"line_end":106,"column_start":1,"column_end":86}},{"value":"/ [`PointWithData`](primitives/struct.PointWithData.html) instead.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84700,"byte_end":84768,"line_start":107,"line_end":107,"column_start":1,"column_end":69}},{"value":"/ This trait defines points, not points with metadata.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84769,"byte_end":84825,"line_start":108,"line_end":108,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84826,"byte_end":84829,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ `Point` is implemented out of the box for arrays like `[f32; 2]` or `[f64; 7]` (up to dimension 9).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84830,"byte_end":84933,"line_start":110,"line_end":110,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84934,"byte_end":84937,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Implementation example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84938,"byte_end":84966,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/ Supporting a custom point type might look like this:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84967,"byte_end":85023,"line_start":113,"line_end":113,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85024,"byte_end":85027,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85028,"byte_end":85035,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ use rstar::Point;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85036,"byte_end":85057,"line_start":116,"line_end":116,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85058,"byte_end":85061,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, PartialEq, Debug)]","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85062,"byte_end":85106,"line_start":118,"line_end":118,"column_start":1,"column_end":45}},{"value":"/ struct IntegerPoint","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85107,"byte_end":85130,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85131,"byte_end":85136,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"/     x: i32,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85137,"byte_end":85152,"line_start":121,"line_end":121,"column_start":1,"column_end":16}},{"value":"/     y: i32","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85153,"byte_end":85167,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85168,"byte_end":85173,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85174,"byte_end":85177,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ impl Point for IntegerPoint","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85178,"byte_end":85209,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85210,"byte_end":85215,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/   type Scalar = i32;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85216,"byte_end":85240,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/   const DIMENSIONS: usize = 2;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85241,"byte_end":85275,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85276,"byte_end":85279,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/   fn generate(generator: impl Fn(usize) -> Self::Scalar) -> Self","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85280,"byte_end":85348,"line_start":130,"line_end":130,"column_start":1,"column_end":69}},{"value":"/   {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85349,"byte_end":85356,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/     IntegerPoint {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85357,"byte_end":85379,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/       x: generator(0),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85380,"byte_end":85406,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/       y: generator(1)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85407,"byte_end":85432,"line_start":134,"line_end":134,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85433,"byte_end":85442,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/   }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85443,"byte_end":85450,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85451,"byte_end":85454,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/   fn nth(&self, index: usize) -> Self::Scalar","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85455,"byte_end":85504,"line_start":138,"line_end":138,"column_start":1,"column_end":50}},{"value":"/   {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85505,"byte_end":85512,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/     match index {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85513,"byte_end":85534,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/       0 => self.x,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85535,"byte_end":85557,"line_start":141,"line_end":141,"column_start":1,"column_end":23}},{"value":"/       1 => self.y,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85558,"byte_end":85580,"line_start":142,"line_end":142,"column_start":1,"column_end":23}},{"value":"/       _ => unreachable!()","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85581,"byte_end":85610,"line_start":143,"line_end":143,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85611,"byte_end":85620,"line_start":144,"line_end":144,"column_start":1,"column_end":10}},{"value":"/   }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85621,"byte_end":85628,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85629,"byte_end":85632,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/   fn nth_mut(&mut self, index: usize) -> &mut Self::Scalar","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85633,"byte_end":85695,"line_start":147,"line_end":147,"column_start":1,"column_end":63}},{"value":"/   {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85696,"byte_end":85703,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/     match index {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85704,"byte_end":85725,"line_start":149,"line_end":149,"column_start":1,"column_end":22}},{"value":"/       0 => &mut self.x,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85726,"byte_end":85753,"line_start":150,"line_end":150,"column_start":1,"column_end":28}},{"value":"/       1 => &mut self.y,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85754,"byte_end":85781,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/       _ => unreachable!()","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85782,"byte_end":85811,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85812,"byte_end":85821,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/   }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85822,"byte_end":85829,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85830,"byte_end":85835,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85836,"byte_end":85843,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":536},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85954,"byte_end":85960,"line_start":159,"line_end":159,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::point::Point::Scalar","value":"type Scalar: RTreeNum;","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" The number type used by this point type.\n","sig":null,"attributes":[{"value":"/ The number type used by this point type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85900,"byte_end":85944,"line_start":158,"line_end":158,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":537},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86036,"byte_end":86046,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"DIMENSIONS","qualname":"::point::Point::DIMENSIONS","value":"usize","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" The number of dimensions of this point type.\n","sig":null,"attributes":[{"value":"/ The number of dimensions of this point type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85977,"byte_end":86025,"line_start":161,"line_end":161,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86364,"byte_end":86372,"line_start":168,"line_end":168,"column_start":8,"column_end":16},"name":"generate","qualname":"::point::Point::generate","value":"pub fn generate<impl Fn(usize) -> Self::Scalar: Fn(usize) ->\n                Self::Scalar>(impl Fn(usize) -> Self::Scalar) -> Self","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Creates a new point value with given values for each dimension.","sig":null,"attributes":[{"value":"/ Creates a new point value with given values for each dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86060,"byte_end":86127,"line_start":164,"line_end":164,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86132,"byte_end":86135,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The value that each dimension should be initialized with is given by the parameter `generator`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86140,"byte_end":86239,"line_start":166,"line_end":166,"column_start":5,"column_end":104}},{"value":"/ Calling `generator(n)` returns the value of dimension `n`, `n` will be in the range `0 .. Self::DIMENSIONS`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86244,"byte_end":86356,"line_start":167,"line_end":167,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86596,"byte_end":86599,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"nth","qualname":"::point::Point::nth","value":"pub fn nth(&Self, usize) -> Self::Scalar","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Returns a single coordinate of this point.","sig":null,"attributes":[{"value":"/ Returns a single coordinate of this point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86430,"byte_end":86476,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86481,"byte_end":86484,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Returns the coordinate indicated by `index`. `index` is always smaller than `Self::DIMENSIONS`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86489,"byte_end":86588,"line_start":172,"line_end":172,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86694,"byte_end":86701,"line_start":176,"line_end":176,"column_start":8,"column_end":15},"name":"nth_mut","qualname":"::point::Point::nth_mut","value":"pub fn nth_mut(&mut Self, usize) -> &mut Self::Scalar","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Mutable variant of [nth](#methods.nth).\n","sig":null,"attributes":[{"value":"/ Mutable variant of [nth](#methods.nth).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86643,"byte_end":86686,"line_start":175,"line_end":175,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":579},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primitives","qualname":"::primitives","value":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/mod.rs","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":606},{"krate":0,"index":627},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"decl_id":null,"docs":" Contains primitives ready for insertion into an r-tree.\n","sig":null,"attributes":[{"value":"! Contains primitives ready for insertion into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/mod.rs","byte_start":90229,"byte_end":90288,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91279,"byte_end":91283,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Line","qualname":"::primitives::line::Line","value":"Line { from, to }","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"decl_id":null,"docs":" A line defined by a start and and end point.","sig":null,"attributes":[{"value":"/ A line defined by a start and and end point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90633,"byte_end":90681,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90682,"byte_end":90685,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct can be inserted directly into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90686,"byte_end":90742,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ # Type parameters","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90743,"byte_end":90764,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ `P`: The line's [Point](../trait.Point.html) type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90765,"byte_end":90819,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90820,"byte_end":90823,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90824,"byte_end":90837,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90838,"byte_end":90845,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rstar::primitives::Line;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90846,"byte_end":90878,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ use rstar::{RTree, RTreeObject};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90879,"byte_end":90915,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90916,"byte_end":90919,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let line_1 = Line::new([0.0, 0.0], [1.0, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90920,"byte_end":90971,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/ let line_2 = Line::new([0.0, 0.0], [-1.0, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":90972,"byte_end":91024,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ let tree = RTree::bulk_load(vec![line_1, line_2]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91025,"byte_end":91079,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91080,"byte_end":91083,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert!(tree.contains(&line_1));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91084,"byte_end":91120,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91121,"byte_end":91128,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":937},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91348,"byte_end":91352,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"from","qualname":"::primitives::line::Line::from","value":"P","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" The line's start point\n","sig":null,"attributes":[{"value":"/ The line's start point","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91313,"byte_end":91339,"line_start":31,"line_end":31,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":938},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91395,"byte_end":91397,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"name":"to","qualname":"::primitives::line::Line::to","value":"P","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" The line's end point.\n","sig":null,"attributes":[{"value":"/ The line's end point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91361,"byte_end":91386,"line_start":33,"line_end":33,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91501,"byte_end":91504,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Line<P>>::new","value":"pub fn new(P, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new line between two points.\n","sig":null,"attributes":[{"value":"/ Creates a new line between two points.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91447,"byte_end":91489,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92029,"byte_end":92037,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"length_2","qualname":"<Line<P>>::length_2","value":"pub fn length_2(&Self) -> P::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the squared length of this line.","sig":null,"attributes":[{"value":"/ Returns the squared length of this line.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91791,"byte_end":91835,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91840,"byte_end":91843,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91848,"byte_end":91861,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91866,"byte_end":91873,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use rstar::primitives::Line;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91878,"byte_end":91910,"line_start":66,"line_end":66,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91915,"byte_end":91918,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let line = Line::new([3, 3], [7, 6]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91923,"byte_end":91964,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(line.length_2(), 25);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91969,"byte_end":92005,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92010,"byte_end":92017,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92742,"byte_end":92755,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"nearest_point","qualname":"<Line<P>>::nearest_point","value":"pub fn nearest_point(&Self, &P) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the nearest point on this line relative to a given point.","sig":null,"attributes":[{"value":"/ Returns the nearest point on this line relative to a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92319,"byte_end":92388,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92393,"byte_end":92396,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92401,"byte_end":92414,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92419,"byte_end":92426,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use rstar::primitives::Line;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92431,"byte_end":92463,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92468,"byte_end":92471,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let line = Line::new([0.0, 0.0], [1., 1.]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92476,"byte_end":92523,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(line.nearest_point(&[0.0, 0.0]), [0.0, 0.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92528,"byte_end":92588,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(line.nearest_point(&[1.0, 0.0]), [0.5, 0.5]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92593,"byte_end":92653,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(line.nearest_point(&[10., 12.]), [1.0, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92658,"byte_end":92718,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":92723,"byte_end":92730,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95420,"byte_end":95433,"line_start":29,"line_end":29,"column_start":12,"column_end":25},"name":"PointWithData","qualname":"::primitives::point_with_data::PointWithData","value":"PointWithData { data }","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"decl_id":null,"docs":" A point with some associated data that can be inserted into an r-tree.","sig":null,"attributes":[{"value":"/ A point with some associated data that can be inserted into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94249,"byte_end":94323,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94324,"byte_end":94327,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often, adding metadata (like a database index) to a point is required before adding them","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94328,"byte_end":94420,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ into an r-tree. This struct removes some of the boilerplate required to do so.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94421,"byte_end":94503,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94504,"byte_end":94507,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94508,"byte_end":94521,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94522,"byte_end":94529,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use rstar::{RTree, PointDistance};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94530,"byte_end":94568,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/ use rstar::primitives::PointWithData;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94569,"byte_end":94610,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94611,"byte_end":94614,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ type RestaurantLocation = PointWithData<&'static str, [f64; 2]>;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94615,"byte_end":94683,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94684,"byte_end":94687,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut restaurants = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94688,"byte_end":94727,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/ restaurants.insert(RestaurantLocation::new(\"Pete's Pizza Place\", [0.3, 0.2]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94728,"byte_end":94810,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ restaurants.insert(RestaurantLocation::new(\"The Great Steak\", [-0.8, 0.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94811,"byte_end":94891,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ restaurants.insert(RestaurantLocation::new(\"Fishy Fortune\", [0.2, -0.2]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94892,"byte_end":94970,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94971,"byte_end":94974,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let my_location = [0.0, 0.0];","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":94975,"byte_end":95008,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95009,"byte_end":95012,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Now find the closest restaurant!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95013,"byte_end":95052,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let place = restaurants.nearest_neighbor(&my_location).unwrap();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95053,"byte_end":95121,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ println!(\"Let's go to {}\", place.data);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95122,"byte_end":95165,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ println!(\"It's really close, only {} miles\", place.distance_2(&my_location))","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95166,"byte_end":95246,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95247,"byte_end":95254,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":975},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95492,"byte_end":95496,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"data","qualname":"::primitives::point_with_data::PointWithData::data","value":"T","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Any data associated with a point.\n","sig":null,"attributes":[{"value":"/ Any data associated with a point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95446,"byte_end":95483,"line_start":30,"line_end":30,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95660,"byte_end":95663,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<PointWithData<T, P>>::new","value":"pub fn new(T, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PointWithData` with the provided data.\n","sig":null,"attributes":[{"value":"/ Creates a new `PointWithData` with the provided data.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95591,"byte_end":95648,"line_start":36,"line_end":36,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95788,"byte_end":95796,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"position","qualname":"<PointWithData<T, P>>::position","value":"pub fn position(&Self) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Returns this point's position.\n","sig":null,"attributes":[{"value":"/ Returns this point's position.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95742,"byte_end":95776,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96941,"byte_end":96950,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"Rectangle","qualname":"::primitives::rectangle::Rectangle","value":"Rectangle {  }","parent":null,"children":[{"krate":0,"index":1030}],"decl_id":null,"docs":" An n-dimensional rectangle defined by its two corners.","sig":null,"attributes":[{"value":"/ An n-dimensional rectangle defined by its two corners.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96440,"byte_end":96498,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96499,"byte_end":96502,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This rectangle can be directly inserted into an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96503,"byte_end":96562,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96563,"byte_end":96566,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ *Note*: Despite being called rectangle, this struct can be used","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96567,"byte_end":96634,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ with more than two dimensions by using an appropriate point type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96635,"byte_end":96704,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96705,"byte_end":96708,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96709,"byte_end":96730,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/ `P`: The rectangle's [Point](../trait.Point.html) type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":96731,"byte_end":96790,"line_start":14,"line_end":14,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97108,"byte_end":97120,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"from_corners","qualname":"<Rectangle<P>>::from_corners","value":"pub fn from_corners(P, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rectangle defined by two corners.\n","sig":null,"attributes":[{"value":"/ Creates a new rectangle defined by two corners.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97045,"byte_end":97096,"line_start":28,"line_end":28,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97327,"byte_end":97336,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"from_aabb","qualname":"<Rectangle<P>>::from_aabb","value":"pub fn from_aabb(AABB<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rectangle defined by it's [axis aligned bounding box](../struct.AABB.html).\n","sig":null,"attributes":[{"value":"/ Creates a new rectangle defined by it's [axis aligned bounding box](../struct.AABB.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97222,"byte_end":97315,"line_start":33,"line_end":33,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97580,"byte_end":97585,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"lower","qualname":"<Rectangle<P>>::lower","value":"pub fn lower(&Self) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the rectangle's lower corner.","sig":null,"attributes":[{"value":"/ Returns the rectangle's lower corner.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97400,"byte_end":97441,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97446,"byte_end":97449,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This is the point contained within the rectangle with the smallest coordinate value in each","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97454,"byte_end":97549,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97554,"byte_end":97568,"line_start":41,"line_end":41,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97811,"byte_end":97816,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"upper","qualname":"<Rectangle<P>>::upper","value":"pub fn upper(&Self) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the rectangle's upper corner.","sig":null,"attributes":[{"value":"/ Returns the rectangle's upper corner.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97637,"byte_end":97678,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97683,"byte_end":97686,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This is the point contained within the AABB with the largest coordinate value in each","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97691,"byte_end":97780,"line_start":48,"line_end":48,"column_start":5,"column_end":94}},{"value":"/ dimension.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97785,"byte_end":97799,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98386,"byte_end":98399,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"nearest_point","qualname":"<Rectangle<P>>::nearest_point","value":"pub fn nearest_point(&Self, &P) -> P","parent":null,"children":[],"decl_id":null,"docs":" Returns the nearest point within this rectangle to a given point.","sig":null,"attributes":[{"value":"/ Returns the nearest point within this rectangle to a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98209,"byte_end":98278,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98283,"byte_end":98286,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If `query_point` is contained within this rectangle, `query_point` is returned.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98291,"byte_end":98374,"line_start":81,"line_end":81,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105843,"byte_end":105848,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"RTree","qualname":"::rtree::RTree","value":"RTree {  }","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" An n-dimensional r-tree data structure.","sig":null,"attributes":[{"value":"/ An n-dimensional r-tree data structure.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100746,"byte_end":100789,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100790,"byte_end":100793,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # R-Trees","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100794,"byte_end":100807,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ R-Trees are data structures containing multi-dimensional objects like points, rectangles","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100808,"byte_end":100900,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/ or polygons. They are optimized for retrieving the nearest neighbor at any point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100901,"byte_end":100986,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100987,"byte_end":100990,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ R-trees can efficiently find answers to queries like \"Find the nearest point of a polygon\",","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100991,"byte_end":101086,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ \"Find all police stations within a rectangle\" or \"Find the 10 nearest restaurants, sorted","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101087,"byte_end":101180,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ by their distances\". Compared to a naive implementation for these scenarios that runs","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101181,"byte_end":101270,"line_start":34,"line_end":34,"column_start":1,"column_end":90}},{"value":"/ in `O(n)` for `n` inserted elements, r-trees reduce this time to `O(log(n))`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101271,"byte_end":101352,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101353,"byte_end":101356,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ However, creating an r-tree is time consuming","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101357,"byte_end":101406,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ and runs in `O(n * log(n))`. Thus, r-trees are suited best if many queries and only few","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101407,"byte_end":101498,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ insertions are made. Also, rstar supports [bulk loading](struct.RTree.html#method.bulk_load),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101499,"byte_end":101596,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/ which cuts down the constant factors when creating an r-tree significantly compared to","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101597,"byte_end":101687,"line_start":40,"line_end":40,"column_start":1,"column_end":91}},{"value":"/ sequential insertions.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101688,"byte_end":101714,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101715,"byte_end":101718,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ R-trees are also _dynamic_, thus, points can be inserted and removed even if the tree","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101719,"byte_end":101808,"line_start":43,"line_end":43,"column_start":1,"column_end":90}},{"value":"/ has been created before.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101809,"byte_end":101837,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101838,"byte_end":101841,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Partitioning heuristics","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101842,"byte_end":101872,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ The inserted objects are internally partitioned into several boxes which should have small","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101873,"byte_end":101967,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ overlap and volume. This is done heuristically. While the originally proposed heuristic focused","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":101968,"byte_end":102067,"line_start":48,"line_end":48,"column_start":1,"column_end":100}},{"value":"/ on fast insertion operations, the resulting r-trees were often suboptimally structured. Another","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102068,"byte_end":102167,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"/ heuristic, called `R*-tree` (r-star-tree), was proposed to improve the tree structure at the cost of","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102168,"byte_end":102272,"line_start":50,"line_end":50,"column_start":1,"column_end":105}},{"value":"/ longer insertion operations and is currently the crate's only implemented","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102273,"byte_end":102350,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ [insertion strategy](trait.InsertionStrategy.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102351,"byte_end":102406,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102407,"byte_end":102410,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Further reading","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102411,"byte_end":102433,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/ For more information refer to the [wikipedia article](https://en.wikipedia.org/wiki/R-tree).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102434,"byte_end":102530,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102531,"byte_end":102534,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102535,"byte_end":102546,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ The items inserted into an r-tree must implement the [RTreeObject](trait.RTreeObject.html)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102547,"byte_end":102641,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/ trait. To support nearest neighbor queries, implement the [PointDistance](trait.PointDistance.html)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102642,"byte_end":102745,"line_start":59,"line_end":59,"column_start":1,"column_end":104}},{"value":"/ trait. Some useful geometric primitives that implement the above traits can be found in the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102746,"byte_end":102841,"line_start":60,"line_end":60,"column_start":1,"column_end":96}},{"value":"/ [primitives](mod.primitives.html) module.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102842,"byte_end":102887,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102888,"byte_end":102891,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102892,"byte_end":102906,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102907,"byte_end":102914,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102915,"byte_end":102936,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102937,"byte_end":102940,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let mut tree = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102941,"byte_end":102973,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ tree.insert([0.1, 0.0f32]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":102974,"byte_end":103005,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ tree.insert([0.2, 0.1]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103006,"byte_end":103034,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/ tree.insert([0.3, 0.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103035,"byte_end":103063,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103064,"byte_end":103067,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tree.nearest_neighbor(&[0.4, -0.1]), Some(&[0.3, 0.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103068,"byte_end":103139,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/ tree.remove(&[0.3, 0.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103140,"byte_end":103169,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(tree.nearest_neighbor(&[0.4, 0.3]), Some(&[0.2, 0.1]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103170,"byte_end":103240,"line_start":74,"line_end":74,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103241,"byte_end":103244,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tree.size(), 2);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103245,"byte_end":103276,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ // &RTree implements IntoIterator!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103277,"byte_end":103315,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/ for point in &tree {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103316,"byte_end":103340,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/     println!(\"Tree contains a point {:?}\", point);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103341,"byte_end":103395,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103396,"byte_end":103401,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103402,"byte_end":103409,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103410,"byte_end":103413,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Supported point types","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103414,"byte_end":103442,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/ All types implementing the [Point](trait.Point.html) trait can be used as underlying point type.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103443,"byte_end":103543,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"/ By default, fixed size arrays can be used as points.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103544,"byte_end":103600,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103601,"byte_end":103604,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Type Parameters","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103605,"byte_end":103627,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/ * `T`: The type of objects stored in the r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103628,"byte_end":103680,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"/ * `Params`: Compile time parameters that change the r-trees internal layout. Refer to the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103681,"byte_end":103774,"line_start":89,"line_end":89,"column_start":1,"column_end":94}},{"value":"/ [RTreeParams](trait.RTreeParams.html) trait for more information.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103775,"byte_end":103844,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103845,"byte_end":103848,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Defining methods generic over r-trees","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103849,"byte_end":103893,"line_start":92,"line_end":92,"column_start":1,"column_end":45}},{"value":"/ If a library defines a method that should be generic over the r-tree type signature, make","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103894,"byte_end":103987,"line_start":93,"line_end":93,"column_start":1,"column_end":94}},{"value":"/ sure to include both type parameters like this:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":103988,"byte_end":104039,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104040,"byte_end":104047,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ # use rstar::{RTree,RTreeObject, RTreeParams};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104048,"byte_end":104098,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/ pub fn generic_rtree_function<T, Params>(tree: &mut RTree<T, Params>)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104099,"byte_end":104172,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ where","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104173,"byte_end":104182,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/   T: RTreeObject,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104183,"byte_end":104204,"line_start":99,"line_end":99,"column_start":1,"column_end":22}},{"value":"/   Params: RTreeParams","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104205,"byte_end":104230,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104231,"byte_end":104236,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/   // ...","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104237,"byte_end":104249,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104250,"byte_end":104255,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104256,"byte_end":104263,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ Otherwise, any user of `generic_rtree_function` would be forced to use","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104264,"byte_end":104338,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ a tree with default parameters.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104339,"byte_end":104374,"line_start":106,"line_end":106,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104375,"byte_end":104378,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Runtime and Performance","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104379,"byte_end":104408,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/ The runtime of query operations (e.g. `nearest neighbor` or `contains`) is usually","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104409,"byte_end":104495,"line_start":109,"line_end":109,"column_start":1,"column_end":87}},{"value":"/ `O(log(n))`, where `n` refers to the number of elements contained in the r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104496,"byte_end":104580,"line_start":110,"line_end":110,"column_start":1,"column_end":85}},{"value":"/ A naive sequential algorithm would take `O(n)` time. However, r-trees incur higher","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104581,"byte_end":104667,"line_start":111,"line_end":111,"column_start":1,"column_end":87}},{"value":"/ build up times: inserting an element into an r-tree costs `O(log(n))` time.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104668,"byte_end":104747,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104748,"byte_end":104751,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ## Bulk loading","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104752,"byte_end":104771,"line_start":114,"line_end":114,"column_start":1,"column_end":20}},{"value":"/ In many scenarios, insertion is only done once for many points. In this case,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104772,"byte_end":104853,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"/ [bulk_load](#method.bulk_load) will be considerably faster. Its total run time","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104854,"byte_end":104936,"line_start":116,"line_end":116,"column_start":1,"column_end":83}},{"value":"/ is still `O(log(n))`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104937,"byte_end":104962,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104963,"byte_end":104966,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ## Element distribution","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104967,"byte_end":104994,"line_start":119,"line_end":119,"column_start":1,"column_end":28}},{"value":"/ The tree's performance heavily relies on the spatial distribution of its elements.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":104995,"byte_end":105081,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"/ Best performance is achieved if:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105082,"byte_end":105118,"line_start":121,"line_end":121,"column_start":1,"column_end":37}},{"value":"/  * No element is inserted more than once","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105119,"byte_end":105163,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/  * The overlapping area of elements should be as small a","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105164,"byte_end":105224,"line_start":123,"line_end":123,"column_start":1,"column_end":61}},{"value":"/    possible.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105225,"byte_end":105241,"line_start":124,"line_end":124,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105242,"byte_end":105245,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ For the edge case that all elements are overlapping (e.g, one and the same element","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105246,"byte_end":105332,"line_start":126,"line_end":126,"column_start":1,"column_end":87}},{"value":"/ is contained `n` times), the performance of most operations usually degrades to `O(n)`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105333,"byte_end":105424,"line_start":127,"line_end":127,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105425,"byte_end":105428,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # (De)Serialization","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105429,"byte_end":105452,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ Enable the `serde` feature for [Serde](https://crates.io/crates/serde) support.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105453,"byte_end":105536,"line_start":130,"line_end":130,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":105537,"byte_end":105540,"line_start":131,"line_end":131,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107061,"byte_end":107064,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"new","qualname":"<RTree<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty r-tree.","sig":null,"attributes":[{"value":"/ Creates a new, empty r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106914,"byte_end":106946,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106951,"byte_end":106954,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The created r-tree is configured with [default parameters](struct.DefaultParams.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106959,"byte_end":107049,"line_start":189,"line_end":189,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107694,"byte_end":107703,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"bulk_load","qualname":"<RTree<T>>::bulk_load","value":"pub fn bulk_load(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new r-tree with some elements already inserted.","sig":null,"attributes":[{"value":"/ Creates a new r-tree with some elements already inserted.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107120,"byte_end":107181,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107186,"byte_end":107189,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This method should be the preferred way for creating r-trees. It both","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107194,"byte_end":107267,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ runs faster and yields an r-tree with better internal structure that","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107272,"byte_end":107344,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ improves query performance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107349,"byte_end":107380,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107385,"byte_end":107388,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This method implements the overlap minimizing top down bulk loading algorithm","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107393,"byte_end":107474,"line_start":200,"line_end":200,"column_start":5,"column_end":86}},{"value":"/ as described in [this paper](http://ceur-ws.org/Vol-74/files/FORUM_18.pdf).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107479,"byte_end":107558,"line_start":201,"line_end":201,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107563,"byte_end":107566,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Runtime","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107571,"byte_end":107584,"line_start":203,"line_end":203,"column_start":5,"column_end":18}},{"value":"/ Bulk loading runs in `O(n * log(n))`, where `n` is the number of loaded","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107589,"byte_end":107664,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107669,"byte_end":107682,"line_start":205,"line_end":205,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108098,"byte_end":108113,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"new_with_params","qualname":"<RTree<T, Params>>::new_with_params","value":"pub fn new_with_params() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty r-tree.","sig":null,"attributes":[{"value":"/ Creates a new, empty r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107877,"byte_end":107909,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107914,"byte_end":107917,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The tree's compile time parameters must be specified. Refer to the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107922,"byte_end":107992,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"/ [RTreeParams](trait.RTreeParams.html) trait for more information and a usage example.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107997,"byte_end":108086,"line_start":219,"line_end":219,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108546,"byte_end":108567,"line_start":233,"line_end":233,"column_start":12,"column_end":33},"name":"bulk_load_with_params","qualname":"<RTree<T, Params>>::bulk_load_with_params","value":"pub fn bulk_load_with_params(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new r-tree with some given elements and configurable parameters.","sig":null,"attributes":[{"value":"/ Creates a new r-tree with some given elements and configurable parameters.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108319,"byte_end":108397,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108402,"byte_end":108405,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ For more information refer to [bulk_load](#method.bulk_load)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108410,"byte_end":108474,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/ and [RTreeParameters](traits.RTreeParameters.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108479,"byte_end":108534,"line_start":232,"line_end":232,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109064,"byte_end":109068,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"size","qualname":"<RTree<T, Params>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of objects in an r-tree.","sig":null,"attributes":[{"value":"/ Returns the number of objects in an r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108699,"byte_end":108746,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108751,"byte_end":108754,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108759,"byte_end":108772,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108777,"byte_end":108784,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108789,"byte_end":108810,"line_start":241,"line_end":241,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108815,"byte_end":108818,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let mut tree = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108823,"byte_end":108855,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(tree.size(), 0);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108860,"byte_end":108891,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ tree.insert([0.0, 1.0, 2.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108896,"byte_end":108929,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(tree.size(), 1);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108934,"byte_end":108965,"line_start":246,"line_end":246,"column_start":5,"column_end":36}},{"value":"/ tree.remove(&[0.0, 1.0, 2.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":108970,"byte_end":109004,"line_start":247,"line_end":247,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(tree.size(), 0);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109009,"byte_end":109040,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109045,"byte_end":109052,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109533,"byte_end":109537,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"iter","qualname":"<RTree<T, Params>>::iter","value":"pub fn iter(&Self) -> RTreeIterator<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all elements contained in the tree.","sig":null,"attributes":[{"value":"/ Returns an iterator over all elements contained in the tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109116,"byte_end":109180,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109185,"byte_end":109188,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The order in which the elements are returned is not specified.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109193,"byte_end":109259,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109264,"byte_end":109267,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109272,"byte_end":109285,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109290,"byte_end":109297,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109302,"byte_end":109323,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/ let tree = RTree::bulk_load(vec![[0.0, 0.1], [0.3, 0.2], [0.4, 0.2]]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109328,"byte_end":109402,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ for point in tree.iter() {","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109407,"byte_end":109437,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/     println!(\"This tree contains point {:?}\", point);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109442,"byte_end":109499,"line_start":263,"line_end":263,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109504,"byte_end":109509,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109514,"byte_end":109521,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110182,"byte_end":110190,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<RTree<T, Params>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> RTreeIteratorMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mutable elements contained in the tree.","sig":null,"attributes":[{"value":"/ Returns an iterator over all mutable elements contained in the tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109632,"byte_end":109704,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109709,"byte_end":109712,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The order in which the elements are returned is not specified.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109717,"byte_end":109783,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109788,"byte_end":109791,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ *Note*: It is a logic error to change an inserted item's position or dimensions. This","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109796,"byte_end":109885,"line_start":274,"line_end":274,"column_start":5,"column_end":94}},{"value":"/ method is primarily meant for own implementations of [RTreeObject](trait.RTreeObject.html)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109890,"byte_end":109984,"line_start":275,"line_end":275,"column_start":5,"column_end":99}},{"value":"/ which can contain arbitrary additional data.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":109989,"byte_end":110037,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ If the position or location of an inserted object need to change, you will need to [remove]","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110042,"byte_end":110137,"line_start":277,"line_end":277,"column_start":5,"column_end":100}},{"value":"/ and reinsert it.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110142,"byte_end":110162,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110167,"byte_end":110170,"line_start":279,"line_end":279,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111204,"byte_end":111222,"line_start":304,"line_end":304,"column_start":12,"column_end":30},"name":"locate_in_envelope","qualname":"<RTree<T, Params>>::locate_in_envelope","value":"pub fn locate_in_envelope(&Self, &T::Envelope) -> LocateInEnvelope<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns all elements contained in an [Envelope](trait.Envelope.html).","sig":null,"attributes":[{"value":"/ Returns all elements contained in an [Envelope](trait.Envelope.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110299,"byte_end":110372,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110377,"byte_end":110380,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Usually, an envelope is an [axis aligned bounding box](struct.AABB.html). This","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110385,"byte_end":110467,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ method can be used to get all elements that are fully contained within an envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110472,"byte_end":110559,"line_start":287,"line_end":287,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110564,"byte_end":110567,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110572,"byte_end":110585,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110590,"byte_end":110597,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use rstar::{RTree, AABB};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110602,"byte_end":110631,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/ let mut tree = RTree::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110636,"byte_end":110677,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/   [0.0, 0.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110682,"byte_end":110699,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/   [0.0, 1.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110704,"byte_end":110721,"line_start":294,"line_end":294,"column_start":5,"column_end":22}},{"value":"/   [1.0, 1.0]","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110726,"byte_end":110742,"line_start":295,"line_end":295,"column_start":5,"column_end":21}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110747,"byte_end":110754,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ let half_unit_square = AABB::from_corners([0.0, 0.0], [0.5, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110759,"byte_end":110829,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ let unit_square = AABB::from_corners([0.0, 0.0], [1.0, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110834,"byte_end":110899,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/ let elements_in_half_unit_square = tree.locate_in_envelope(&half_unit_square);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110904,"byte_end":110986,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/ let elements_in_unit_square = tree.locate_in_envelope(&unit_square);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":110991,"byte_end":111063,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(elements_in_half_unit_square.count(), 2);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111068,"byte_end":111124,"line_start":301,"line_end":301,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(elements_in_unit_square.count(), 3);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111129,"byte_end":111180,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111185,"byte_end":111192,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111458,"byte_end":111480,"line_start":309,"line_end":309,"column_start":12,"column_end":34},"name":"locate_in_envelope_mut","qualname":"<RTree<T, Params>>::locate_in_envelope_mut","value":"pub fn locate_in_envelope_mut(&mut Self, &T::Envelope)\n-> LocateInEnvelopeMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Mutable variant of [locate_in_envelope](#method.locate_in_envelope).\n","sig":null,"attributes":[{"value":"/ Mutable variant of [locate_in_envelope](#method.locate_in_envelope).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111374,"byte_end":111446,"line_start":308,"line_end":308,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113418,"byte_end":113449,"line_start":347,"line_end":347,"column_start":12,"column_end":43},"name":"locate_in_envelope_intersecting","qualname":"<RTree<T, Params>>::locate_in_envelope_intersecting","value":"pub fn locate_in_envelope_intersecting(&Self, &T::Envelope)\n-> LocateInEnvelopeIntersecting<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns all elements whose envelope intersects a given envelope.","sig":null,"attributes":[{"value":"/ Returns all elements whose envelope intersects a given envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111646,"byte_end":111714,"line_start":313,"line_end":313,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111719,"byte_end":111722,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Any element fully contained within an envelope is also returned by this method. Two","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111727,"byte_end":111814,"line_start":315,"line_end":315,"column_start":5,"column_end":92}},{"value":"/ envelopes that \"touch\" each other (e.g. by sharing only a common corner) are also","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111819,"byte_end":111904,"line_start":316,"line_end":316,"column_start":5,"column_end":90}},{"value":"/ considered to intersect. Usually, an envelope is an [axis aligned bounding box](struct.AABB.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":111909,"byte_end":112011,"line_start":317,"line_end":317,"column_start":5,"column_end":107}},{"value":"/ This method will return all elements whose AABB has some common area with","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112016,"byte_end":112093,"line_start":318,"line_end":318,"column_start":5,"column_end":82}},{"value":"/ a given AABB.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112098,"byte_end":112115,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112120,"byte_end":112123,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112128,"byte_end":112141,"line_start":321,"line_end":321,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112146,"byte_end":112153,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ use rstar::{RTree, AABB};","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112158,"byte_end":112187,"line_start":323,"line_end":323,"column_start":5,"column_end":34}},{"value":"/ use rstar::primitives::Rectangle;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112192,"byte_end":112229,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112234,"byte_end":112237,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let left_piece = AABB::from_corners([0.0, 0.0], [0.4, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112242,"byte_end":112306,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/ let right_piece = AABB::from_corners([0.6, 0.0], [1.0, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112311,"byte_end":112376,"line_start":327,"line_end":327,"column_start":5,"column_end":70}},{"value":"/ let middle_piece = AABB::from_corners([0.25, 0.0], [0.75, 1.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112381,"byte_end":112449,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112454,"byte_end":112457,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let mut tree = RTree::<Rectangle<_>>::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112462,"byte_end":112519,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/   left_piece.into(),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112524,"byte_end":112548,"line_start":331,"line_end":331,"column_start":5,"column_end":29}},{"value":"/   right_piece.into(),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112553,"byte_end":112578,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/   middle_piece.into(),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112583,"byte_end":112609,"line_start":333,"line_end":333,"column_start":5,"column_end":31}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112614,"byte_end":112621,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112626,"byte_end":112629,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let elements_intersecting_left_piece = tree.locate_in_envelope_intersecting(&left_piece);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112634,"byte_end":112727,"line_start":336,"line_end":336,"column_start":5,"column_end":98}},{"value":"/ // The left piece should not intersect the right piece!","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112732,"byte_end":112791,"line_start":337,"line_end":337,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(elements_intersecting_left_piece.count(), 2);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112796,"byte_end":112856,"line_start":338,"line_end":338,"column_start":5,"column_end":65}},{"value":"/ let elements_intersecting_middle = tree.locate_in_envelope_intersecting(&middle_piece);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112861,"byte_end":112952,"line_start":339,"line_end":339,"column_start":5,"column_end":96}},{"value":"/ // Only the middle piece intersects all pieces within the tree","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":112957,"byte_end":113023,"line_start":340,"line_end":340,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(elements_intersecting_middle.count(), 3);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113028,"byte_end":113084,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113089,"byte_end":113092,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let large_piece = AABB::from_corners([-100., -100.], [100., 100.]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113097,"byte_end":113168,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/ let elements_intersecting_large_piece = tree.locate_in_envelope_intersecting(&large_piece);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113173,"byte_end":113268,"line_start":344,"line_end":344,"column_start":5,"column_end":100}},{"value":"/ // Any element that is fully contained should also be returned:","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113273,"byte_end":113340,"line_start":345,"line_end":345,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(elements_intersecting_large_piece.count(), 3);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113345,"byte_end":113406,"line_start":346,"line_end":346,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113800,"byte_end":113835,"line_start":358,"line_end":358,"column_start":12,"column_end":47},"name":"locate_in_envelope_intersecting_mut","qualname":"<RTree<T, Params>>::locate_in_envelope_intersecting_mut","value":"pub fn locate_in_envelope_intersecting_mut(&mut Self, &T::Envelope)\n-> LocateInEnvelopeIntersectingMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Mutable variant of [locate_in_envelope_intersecting](#method.locate_in_envelope_intersecting)\n","sig":null,"attributes":[{"value":"/ Mutable variant of [locate_in_envelope_intersecting](#method.locate_in_envelope_intersecting)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":113691,"byte_end":113788,"line_start":357,"line_end":357,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114448,"byte_end":114478,"line_start":375,"line_end":375,"column_start":12,"column_end":42},"name":"locate_with_selection_function","qualname":"<RTree<T, Params>>::locate_with_selection_function","value":"pub fn locate_with_selection_function<S: SelectionFunction<T>>(&Self, S)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locates elements in the r-tree defined by a selection function.","sig":null,"attributes":[{"value":"/ Locates elements in the r-tree defined by a selection function.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114091,"byte_end":114158,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114163,"byte_end":114166,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Refer to the documentation of [`SelectionFunction`](trait.SelectionFunction.html) for","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114171,"byte_end":114260,"line_start":370,"line_end":370,"column_start":5,"column_end":94}},{"value":"/ more information.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114265,"byte_end":114286,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114291,"byte_end":114294,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Usually, other `locate` methods should cover most common use cases. This method is only required","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114299,"byte_end":114399,"line_start":373,"line_end":373,"column_start":5,"column_end":105}},{"value":"/ in more specific situations.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114404,"byte_end":114436,"line_start":374,"line_end":374,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114771,"byte_end":114805,"line_start":383,"line_end":383,"column_start":12,"column_end":46},"name":"locate_with_selection_function_mut","qualname":"<RTree<T, Params>>::locate_with_selection_function_mut","value":"pub fn locate_with_selection_function_mut<S: SelectionFunction<T>>(&mut Self,\n                                                                   S)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Mutable variant of [`locate_with_selection_function`](#method.locate_with_selection_function).\n","sig":null,"attributes":[{"value":"/ Mutable variant of [`locate_with_selection_function`](#method.locate_with_selection_function).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":114661,"byte_end":114759,"line_start":382,"line_end":382,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115214,"byte_end":115253,"line_start":394,"line_end":394,"column_start":12,"column_end":51},"name":"intersection_candidates_with_other_tree","qualname":"<RTree<T, Params>>::intersection_candidates_with_other_tree","value":"pub fn intersection_candidates_with_other_tree<'a, U>(&'a Self, &'a RTree<U>)\n-> IntersectionIterator<, T, U> where U: RTreeObject<Envelope = T::Envelope>","parent":null,"children":[],"decl_id":null,"docs":" Gets all possible intersecting objects of this and another tree.","sig":null,"attributes":[{"value":"/ Gets all possible intersecting objects of this and another tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115003,"byte_end":115071,"line_start":390,"line_end":390,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115076,"byte_end":115079,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ This will return all objects whose _envelopes_ intersect. No geometric intersection","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115084,"byte_end":115171,"line_start":392,"line_end":392,"column_start":5,"column_end":92}},{"value":"/ checking is performed.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115176,"byte_end":115202,"line_start":393,"line_end":393,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115787,"byte_end":115791,"line_start":409,"line_end":409,"column_start":12,"column_end":16},"name":"root","qualname":"<RTree<T, Params>>::root","value":"pub fn root(&Self) -> &ParentNode<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the tree's root node.","sig":null,"attributes":[{"value":"/ Returns the tree's root node.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115481,"byte_end":115514,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115519,"byte_end":115522,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Usually, you will not require to call this method. However, for debugging purposes or for","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115527,"byte_end":115620,"line_start":406,"line_end":406,"column_start":5,"column_end":98}},{"value":"/ advanced algorithms, knowledge about the tree's internal structure may be required.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115625,"byte_end":115712,"line_start":407,"line_end":407,"column_start":5,"column_end":92}},{"value":"/ For these cases, this method serves as an entry point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":115717,"byte_end":115775,"line_start":408,"line_end":408,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116671,"byte_end":116701,"line_start":440,"line_end":440,"column_start":12,"column_end":42},"name":"remove_with_selection_function","qualname":"<RTree<T, Params>>::remove_with_selection_function","value":"pub fn remove_with_selection_function<F>(&mut Self, F) -> Option<T> where\nF: SelectionFunction<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns a single element from the tree. The element to remove is specified\n by a [`SelectionFunction`](trait.SelectionFunction.html).","sig":null,"attributes":[{"value":"/ Removes and returns a single element from the tree. The element to remove is specified","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116396,"byte_end":116486,"line_start":435,"line_end":435,"column_start":5,"column_end":95}},{"value":"/ by a [`SelectionFunction`](trait.SelectionFunction.html).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116491,"byte_end":116552,"line_start":436,"line_end":436,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116557,"byte_end":116560,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ See also: [`remove`](#method.remove), [`remove_at_point`](#method.remove_at_point)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116565,"byte_end":116651,"line_start":438,"line_end":438,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116656,"byte_end":116659,"line_start":439,"line_end":439,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117370,"byte_end":117385,"line_start":463,"line_end":463,"column_start":12,"column_end":27},"name":"locate_at_point","qualname":"<RTree<T, Params>>::locate_at_point","value":"pub fn locate_at_point(&Self, &<T::Envelope as Envelope>::Point) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a single object that covers a given point.","sig":null,"attributes":[{"value":"/ Returns a single object that covers a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117056,"byte_end":117110,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117115,"byte_end":117118,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Method [contains_point](trait.PointDistance.html#method.contains_point)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117123,"byte_end":117198,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ is used to determine if a tree element contains the given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117203,"byte_end":117271,"line_start":460,"line_end":460,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117276,"byte_end":117279,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ If multiple elements contain the given point, any of them is returned.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117284,"byte_end":117358,"line_start":462,"line_end":462,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117587,"byte_end":117606,"line_start":468,"line_end":468,"column_start":12,"column_end":31},"name":"locate_at_point_mut","qualname":"<RTree<T, Params>>::locate_at_point_mut","value":"pub fn locate_at_point_mut(&mut Self, &<T::Envelope as Envelope>::Point)\n-> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Mutable variant of [locate_at_point](#method.locate_at_point).\n","sig":null,"attributes":[{"value":"/ Mutable variant of [locate_at_point](#method.locate_at_point).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117509,"byte_end":117575,"line_start":467,"line_end":467,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118494,"byte_end":118513,"line_start":493,"line_end":493,"column_start":12,"column_end":31},"name":"locate_all_at_point","qualname":"<RTree<T, Params>>::locate_all_at_point","value":"pub fn locate_all_at_point(&Self, &<T::Envelope as Envelope>::Point)\n-> LocateAllAtPoint<, T>","parent":null,"children":[],"decl_id":null,"docs":" Locate all elements containing a given point.","sig":null,"attributes":[{"value":"/ Locate all elements containing a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117765,"byte_end":117814,"line_start":475,"line_end":475,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117819,"byte_end":117822,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Method [contains_point](trait.PointDistance.html#method.contains_point) is used","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117827,"byte_end":117910,"line_start":477,"line_end":477,"column_start":5,"column_end":88}},{"value":"/ to determine if a tree element contains the given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117915,"byte_end":117975,"line_start":478,"line_end":478,"column_start":5,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117980,"byte_end":117993,"line_start":479,"line_end":479,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":117998,"byte_end":118005,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118010,"byte_end":118031,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/ use rstar::primitives::Rectangle;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118036,"byte_end":118073,"line_start":482,"line_end":482,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118078,"byte_end":118081,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let tree = RTree::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118086,"byte_end":118123,"line_start":484,"line_end":484,"column_start":5,"column_end":42}},{"value":"/   Rectangle::from_corners([0.0, 0.0], [2.0, 2.0]),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118128,"byte_end":118182,"line_start":485,"line_end":485,"column_start":5,"column_end":59}},{"value":"/   Rectangle::from_corners([1.0, 1.0], [3.0, 3.0])","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118187,"byte_end":118240,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118245,"byte_end":118252,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118257,"byte_end":118260,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tree.locate_all_at_point(&[1.5, 1.5]).count(), 2);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118265,"byte_end":118330,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(tree.locate_all_at_point(&[0.0, 0.0]).count(), 1);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118335,"byte_end":118400,"line_start":490,"line_end":490,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(tree.locate_all_at_point(&[-1., 0.0]).count(), 0);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118405,"byte_end":118470,"line_start":491,"line_end":491,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118475,"byte_end":118482,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118786,"byte_end":118809,"line_start":501,"line_end":501,"column_start":12,"column_end":35},"name":"locate_all_at_point_mut","qualname":"<RTree<T, Params>>::locate_all_at_point_mut","value":"pub fn locate_all_at_point_mut(&mut Self, &<T::Envelope as Envelope>::Point)\n-> LocateAllAtPointMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Mutable variant of [locate_at_point_mut](#method.locate_at_point_mut).\n","sig":null,"attributes":[{"value":"/ Mutable variant of [locate_at_point_mut](#method.locate_at_point_mut).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":118700,"byte_end":118774,"line_start":500,"line_end":500,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119716,"byte_end":119731,"line_start":527,"line_end":527,"column_start":12,"column_end":27},"name":"remove_at_point","qualname":"<RTree<T, Params>>::remove_at_point","value":"pub fn remove_at_point(&mut Self, &<T::Envelope as Envelope>::Point)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes an element containing a given point.","sig":null,"attributes":[{"value":"/ Removes an element containing a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119010,"byte_end":119058,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119063,"byte_end":119066,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ The removed element, if any, is returned. If multiple elements cover the given point,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119071,"byte_end":119160,"line_start":510,"line_end":510,"column_start":5,"column_end":94}},{"value":"/ only one of them is removed and returned.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119165,"byte_end":119210,"line_start":511,"line_end":511,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119215,"byte_end":119218,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119223,"byte_end":119236,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119241,"byte_end":119248,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119253,"byte_end":119274,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/ use rstar::primitives::Rectangle;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119279,"byte_end":119316,"line_start":516,"line_end":516,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119321,"byte_end":119324,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let mut tree = RTree::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119329,"byte_end":119370,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/   Rectangle::from_corners([0.0, 0.0], [2.0, 2.0]),","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119375,"byte_end":119429,"line_start":519,"line_end":519,"column_start":5,"column_end":59}},{"value":"/   Rectangle::from_corners([1.0, 1.0], [3.0, 3.0])","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119434,"byte_end":119487,"line_start":520,"line_end":520,"column_start":5,"column_end":58}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119492,"byte_end":119499,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119504,"byte_end":119507,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ assert!(tree.remove_at_point(&[1.5, 1.5]).is_some());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119512,"byte_end":119569,"line_start":523,"line_end":523,"column_start":5,"column_end":62}},{"value":"/ assert!(tree.remove_at_point(&[1.5, 1.5]).is_some());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119574,"byte_end":119631,"line_start":524,"line_end":524,"column_start":5,"column_end":62}},{"value":"/ assert!(tree.remove_at_point(&[1.5, 1.5]).is_none());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119636,"byte_end":119693,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119698,"byte_end":119704,"line_start":526,"line_end":526,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120499,"byte_end":120507,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"contains","qualname":"<RTree<T, Params>>::contains","value":"pub fn contains(&Self, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if a given element is equal (`==`) to an element in the\n r-tree.","sig":null,"attributes":[{"value":"/ Returns `true` if a given element is equal (`==`) to an element in the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120040,"byte_end":120114,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120119,"byte_end":120130,"line_start":539,"line_end":539,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120135,"byte_end":120138,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This method will only work correctly if two equal elements also have the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120143,"byte_end":120219,"line_start":541,"line_end":541,"column_start":5,"column_end":81}},{"value":"/ same envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120224,"byte_end":120242,"line_start":542,"line_end":542,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120247,"byte_end":120250,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120255,"byte_end":120268,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120273,"byte_end":120280,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120285,"byte_end":120306,"line_start":546,"line_end":546,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120311,"byte_end":120314,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let mut tree = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120319,"byte_end":120351,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/ assert!(!tree.contains(&[0.0, 2.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120356,"byte_end":120397,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ tree.insert([0.0, 2.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120402,"byte_end":120430,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/ assert!(tree.contains(&[0.0, 2.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120435,"byte_end":120475,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120480,"byte_end":120487,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121354,"byte_end":121360,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"remove","qualname":"<RTree<T, Params>>::remove","value":"pub fn remove(&mut Self, &T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns an element of the r-tree equal (`==`) to a given element.","sig":null,"attributes":[{"value":"/ Removes and returns an element of the r-tree equal (`==`) to a given element.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120606,"byte_end":120687,"line_start":557,"line_end":557,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120692,"byte_end":120695,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If multiple elements equal to the given elements are contained in the tree, only","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120700,"byte_end":120784,"line_start":559,"line_end":559,"column_start":5,"column_end":89}},{"value":"/ one of them is removed and returned.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120789,"byte_end":120829,"line_start":560,"line_end":560,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120834,"byte_end":120837,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This method will only work correctly if two equal elements also have the","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120842,"byte_end":120918,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ same envelope.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120923,"byte_end":120941,"line_start":563,"line_end":563,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120946,"byte_end":120949,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120954,"byte_end":120967,"line_start":565,"line_end":565,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120972,"byte_end":120979,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":120984,"byte_end":121005,"line_start":567,"line_end":567,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121010,"byte_end":121013,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let mut tree = RTree::new();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121018,"byte_end":121050,"line_start":569,"line_end":569,"column_start":5,"column_end":37}},{"value":"/ tree.insert([0.0, 2.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121055,"byte_end":121083,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/ // The element can be inserted twice just fine","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121088,"byte_end":121138,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ tree.insert([0.0, 2.0]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121143,"byte_end":121171,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/ assert!(tree.remove(&[0.0, 2.0]).is_some());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121176,"byte_end":121224,"line_start":573,"line_end":573,"column_start":5,"column_end":53}},{"value":"/ assert!(tree.remove(&[0.0, 2.0]).is_some());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121229,"byte_end":121277,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/ assert!(tree.remove(&[0.0, 2.0]).is_none());","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121282,"byte_end":121330,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121335,"byte_end":121342,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122140,"byte_end":122156,"line_start":603,"line_end":603,"column_start":12,"column_end":28},"name":"nearest_neighbor","qualname":"<RTree<T, Params>>::nearest_neighbor","value":"pub fn nearest_neighbor(&Self, &<T::Envelope as Envelope>::Point)\n-> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the nearest neighbor for a given point.","sig":null,"attributes":[{"value":"/ Returns the nearest neighbor for a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121618,"byte_end":121669,"line_start":588,"line_end":588,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121674,"byte_end":121677,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The distance is calculated by calling","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121682,"byte_end":121723,"line_start":590,"line_end":590,"column_start":5,"column_end":46}},{"value":"/ [PointDistance::distance_2](traits.PointDistance.html#method.distance_2)","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121728,"byte_end":121804,"line_start":591,"line_end":591,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121809,"byte_end":121812,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121817,"byte_end":121830,"line_start":593,"line_end":593,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121835,"byte_end":121842,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121847,"byte_end":121868,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/ let tree = RTree::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121873,"byte_end":121910,"line_start":596,"line_end":596,"column_start":5,"column_end":42}},{"value":"/   [0.0, 0.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121915,"byte_end":121932,"line_start":597,"line_end":597,"column_start":5,"column_end":22}},{"value":"/   [0.0, 1.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121937,"byte_end":121954,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121959,"byte_end":121966,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(tree.nearest_neighbor(&[-1., 0.0]), Some(&[0.0, 0.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121971,"byte_end":122041,"line_start":600,"line_end":600,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(tree.nearest_neighbor(&[0.0, 2.0]), Some(&[0.0, 1.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122046,"byte_end":122116,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122121,"byte_end":122128,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123130,"byte_end":123152,"line_start":622,"line_end":622,"column_start":12,"column_end":34},"name":"locate_within_distance","qualname":"<RTree<T, Params>>::locate_within_distance","value":"pub fn locate_within_distance(&Self, <T::Envelope as Envelope>::Point,\n                              <<T::Envelope as Envelope>::Point as\n                              Point>::Scalar)\n-> LocateWithinDistanceIterator<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns all elements of the tree within a certain distance.","sig":null,"attributes":[{"value":"/ Returns all elements of the tree within a certain distance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122619,"byte_end":122682,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122687,"byte_end":122690,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The elements may be returned in any order. Each returned element","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122695,"byte_end":122763,"line_start":616,"line_end":616,"column_start":5,"column_end":73}},{"value":"/ will have a squared distance less or equal to the given squared distance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122768,"byte_end":122845,"line_start":617,"line_end":617,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122850,"byte_end":122853,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This method makes use of [distance_2_if_less_or_equal](trait.PointDistance.html#method.distance_2_if_less_or_equal).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122858,"byte_end":122978,"line_start":619,"line_end":619,"column_start":5,"column_end":125}},{"value":"/ If performance is critical and the distance calculation to the object is fast,","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":122983,"byte_end":123065,"line_start":620,"line_end":620,"column_start":5,"column_end":87}},{"value":"/ overwriting this function may be beneficial.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123070,"byte_end":123118,"line_start":621,"line_end":621,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124212,"byte_end":124233,"line_start":650,"line_end":650,"column_start":12,"column_end":33},"name":"nearest_neighbor_iter","qualname":"<RTree<T, Params>>::nearest_neighbor_iter","value":"pub fn nearest_neighbor_iter(&Self, &<T::Envelope as Envelope>::Point)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns all elements of the tree sorted by their distance to a given point.","sig":null,"attributes":[{"value":"/ Returns all elements of the tree sorted by their distance to a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123535,"byte_end":123614,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123619,"byte_end":123622,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Runtime","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123627,"byte_end":123640,"line_start":633,"line_end":633,"column_start":5,"column_end":18}},{"value":"/ Every `next()` call runs in `O(log(n))`. Creating the iterator runs in","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123645,"byte_end":123719,"line_start":634,"line_end":634,"column_start":5,"column_end":79}},{"value":"/ `O(log(n))`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123724,"byte_end":123740,"line_start":635,"line_end":635,"column_start":5,"column_end":21}},{"value":"/ The [r-tree documentation](struct.RTree.html) contains more information about","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123745,"byte_end":123826,"line_start":636,"line_end":636,"column_start":5,"column_end":86}},{"value":"/ r-tree performance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123831,"byte_end":123854,"line_start":637,"line_end":637,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123859,"byte_end":123862,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123867,"byte_end":123880,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123885,"byte_end":123892,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123897,"byte_end":123918,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ let tree = RTree::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123923,"byte_end":123960,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/   [0.0, 0.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123965,"byte_end":123982,"line_start":643,"line_end":643,"column_start":5,"column_end":22}},{"value":"/   [0.0, 1.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":123987,"byte_end":124004,"line_start":644,"line_end":644,"column_start":5,"column_end":22}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124009,"byte_end":124016,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124021,"byte_end":124024,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ let nearest_neighbors = tree.nearest_neighbor_iter(&[0.5, 0.0]).collect::<Vec<_>>();","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124029,"byte_end":124117,"line_start":647,"line_end":647,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(nearest_neighbors, vec![&[0.0, 0.0], &[0.0, 1.0]]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124122,"byte_end":124188,"line_start":648,"line_end":648,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124193,"byte_end":124200,"line_start":649,"line_end":649,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124541,"byte_end":124576,"line_start":658,"line_end":658,"column_start":12,"column_end":47},"name":"nearest_neighbor_iter_with_distance","qualname":"<RTree<T, Params>>::nearest_neighbor_iter_with_distance","value":"pub fn nearest_neighbor_iter_with_distance(&Self,\n                                           &<T::Envelope as Envelope>::Point)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `(element, distance)` tuples of the tree sorted by their distance to a given point.\n","sig":null,"attributes":[{"value":"/ Returns `(element, distance)` tuples of the tree sorted by their distance to a given point.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124434,"byte_end":124529,"line_start":657,"line_end":657,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125454,"byte_end":125474,"line_start":681,"line_end":681,"column_start":12,"column_end":32},"name":"pop_nearest_neighbor","qualname":"<RTree<T, Params>>::pop_nearest_neighbor","value":"pub fn pop_nearest_neighbor(&mut Self, &<T::Envelope as Envelope>::Point)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the nearest neighbor for a given point and returns it.","sig":null,"attributes":[{"value":"/ Removes the nearest neighbor for a given point and returns it.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124840,"byte_end":124906,"line_start":665,"line_end":665,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124911,"byte_end":124914,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The distance is calculated by calling","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124919,"byte_end":124960,"line_start":667,"line_end":667,"column_start":5,"column_end":46}},{"value":"/ [PointDistance::distance_2](traits.PointDistance.html#method.distance_2).","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":124965,"byte_end":125042,"line_start":668,"line_end":668,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125047,"byte_end":125050,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125055,"byte_end":125068,"line_start":670,"line_end":670,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125073,"byte_end":125080,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use rstar::RTree;","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125085,"byte_end":125106,"line_start":672,"line_end":672,"column_start":5,"column_end":26}},{"value":"/ let mut tree = RTree::bulk_load(vec![","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125111,"byte_end":125152,"line_start":673,"line_end":673,"column_start":5,"column_end":46}},{"value":"/   [0.0, 0.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125157,"byte_end":125174,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/   [0.0, 1.0],","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125179,"byte_end":125196,"line_start":675,"line_end":675,"column_start":5,"column_end":22}},{"value":"/ ]);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125201,"byte_end":125208,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(tree.pop_nearest_neighbor(&[0.0, 0.0]), Some([0.0, 0.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125213,"byte_end":125286,"line_start":677,"line_end":677,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(tree.pop_nearest_neighbor(&[0.0, 0.0]), Some([0.0, 1.0]));","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125291,"byte_end":125364,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(tree.pop_nearest_neighbor(&[0.0, 0.0]), None);","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125369,"byte_end":125430,"line_start":679,"line_end":679,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125435,"byte_end":125442,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126280,"byte_end":126286,"line_start":707,"line_end":707,"column_start":12,"column_end":18},"name":"insert","qualname":"<RTree<T, Params>>::insert","value":"pub fn insert(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the r-tree.","sig":null,"attributes":[{"value":"/ Inserts a new element into the r-tree.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125946,"byte_end":125988,"line_start":699,"line_end":699,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125993,"byte_end":125996,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ If the element has already been present in the tree, it will now be present twice.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126001,"byte_end":126087,"line_start":701,"line_end":701,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126092,"byte_end":126095,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Runtime","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126100,"byte_end":126113,"line_start":703,"line_end":703,"column_start":5,"column_end":18}},{"value":"/ This method runs in `O(log(n))`.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126118,"byte_end":126154,"line_start":704,"line_end":704,"column_start":5,"column_end":41}},{"value":"/ The [r-tree documentation](struct.RTree.html) contains more information about","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126159,"byte_end":126240,"line_start":705,"line_end":705,"column_start":5,"column_end":86}},{"value":"/ r-tree performance.","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126245,"byte_end":126268,"line_start":706,"line_end":706,"column_start":5,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2487,"byte_end":2491,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":4395,"byte_end":4399,"line_start":99,"line_end":99,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/bulk_load/bulk_load_sequential.rs","byte_start":10236,"byte_end":10252,"line_start":53,"line_end":53,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/bulk_load/cluster_group_iterator.rs","byte_start":13820,"byte_end":13840,"line_start":10,"line_end":10,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/bulk_load/cluster_group_iterator.rs","byte_start":14228,"byte_end":14248,"line_start":25,"line_end":25,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/intersection_iterator.rs","byte_start":17272,"byte_end":17292,"line_start":15,"line_end":15,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/intersection_iterator.rs","byte_start":18605,"byte_end":18625,"line_start":60,"line_end":60,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":22403,"byte_end":22420,"line_start":27,"line_end":27,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":23006,"byte_end":23023,"line_start":45,"line_end":45,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":23895,"byte_end":23915,"line_start":81,"line_end":81,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":24350,"byte_end":24370,"line_start":99,"line_end":99,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30068,"byte_end":30092,"line_start":15,"line_end":15,"column_start":27,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30247,"byte_end":30271,"line_start":24,"line_end":24,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30511,"byte_end":30535,"line_start":34,"line_end":34,"column_start":20,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30590,"byte_end":30614,"line_start":36,"line_end":36,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30772,"byte_end":30803,"line_start":45,"line_end":45,"column_start":13,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":31754,"byte_end":31785,"line_start":77,"line_end":77,"column_start":26,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":32711,"byte_end":32734,"line_start":112,"line_end":112,"column_start":13,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":33022,"byte_end":33045,"line_start":123,"line_end":123,"column_start":26,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44537,"byte_end":44559,"line_start":28,"line_end":28,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57418,"byte_end":57442,"line_start":44,"line_end":44,"column_start":9,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57610,"byte_end":57634,"line_start":53,"line_end":53,"column_start":34,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58032,"byte_end":58064,"line_start":73,"line_end":73,"column_start":9,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58240,"byte_end":58272,"line_start":82,"line_end":82,"column_start":34,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58597,"byte_end":58610,"line_start":97,"line_end":97,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59018,"byte_end":59039,"line_start":119,"line_end":119,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59221,"byte_end":59242,"line_start":128,"line_end":128,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59776,"byte_end":59796,"line_start":151,"line_end":151,"column_start":13,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59990,"byte_end":60010,"line_start":160,"line_end":160,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":60548,"byte_end":60576,"line_start":181,"line_end":181,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":60948,"byte_end":60976,"line_start":196,"line_end":196,"column_start":34,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":61552,"byte_end":61575,"line_start":219,"line_end":219,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":61794,"byte_end":61817,"line_start":231,"line_end":231,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66248,"byte_end":66257,"line_start":45,"line_end":45,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66539,"byte_end":66548,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66749,"byte_end":66759,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":76113,"byte_end":76114,"line_start":197,"line_end":197,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":76270,"byte_end":76271,"line_start":208,"line_end":208,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79451,"byte_end":79464,"line_start":61,"line_end":61,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84376,"byte_end":84377,"line_start":101,"line_end":101,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86773,"byte_end":86774,"line_start":179,"line_end":179,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91413,"byte_end":91417,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91590,"byte_end":91594,"line_start":47,"line_end":47,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91757,"byte_end":91761,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":93132,"byte_end":93136,"line_start":106,"line_end":106,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95565,"byte_end":95578,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95868,"byte_end":95881,"line_start":47,"line_end":47,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":96051,"byte_end":96064,"line_start":58,"line_end":58,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97006,"byte_end":97015,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97892,"byte_end":97901,"line_start":55,"line_end":55,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98027,"byte_end":98036,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98170,"byte_end":98179,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98507,"byte_end":98516,"line_start":87,"line_end":87,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100608,"byte_end":100613,"line_start":16,"line_end":16,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106218,"byte_end":106229,"line_start":159,"line_end":159,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106512,"byte_end":106517,"line_start":169,"line_end":169,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106873,"byte_end":106878,"line_start":183,"line_end":183,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107803,"byte_end":107808,"line_start":211,"line_end":211,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116980,"byte_end":116985,"line_start":452,"line_end":452,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119954,"byte_end":119959,"line_start":533,"line_end":533,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121542,"byte_end":121547,"line_start":583,"line_end":583,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125872,"byte_end":125877,"line_start":694,"line_end":694,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126414,"byte_end":126419,"line_start":713,"line_end":713,"column_start":17,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/lib.rs","byte_start":1000,"byte_end":1010,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":579}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":2487,"byte_end":2491,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/aabb.rs","byte_start":4395,"byte_end":4399,"line_start":99,"line_end":99,"column_start":22,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":791},"to":{"krate":0,"index":441}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/bulk_load/bulk_load_sequential.rs","byte_start":10236,"byte_end":10252,"line_start":53,"line_end":53,"column_start":56,"column_end":72},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/bulk_load/cluster_group_iterator.rs","byte_start":13820,"byte_end":13840,"line_start":10,"line_end":10,"column_start":22,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/bulk_load/cluster_group_iterator.rs","byte_start":14228,"byte_end":14248,"line_start":25,"line_end":25,"column_start":35,"column_end":55},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/intersection_iterator.rs","byte_start":17272,"byte_end":17292,"line_start":15,"line_end":15,"column_start":16,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/intersection_iterator.rs","byte_start":18605,"byte_end":18625,"line_start":60,"line_end":60,"column_start":29,"column_end":49},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":22403,"byte_end":22420,"line_start":27,"line_end":27,"column_start":19,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":23006,"byte_end":23023,"line_start":45,"line_end":45,"column_start":32,"column_end":49},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":23895,"byte_end":23915,"line_start":81,"line_end":81,"column_start":19,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/iterators.rs","byte_start":24350,"byte_end":24370,"line_start":99,"line_end":99,"column_start":32,"column_end":52},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30068,"byte_end":30092,"line_start":15,"line_end":15,"column_start":27,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30247,"byte_end":30271,"line_start":24,"line_end":24,"column_start":28,"column_end":52},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30511,"byte_end":30535,"line_start":34,"line_end":34,"column_start":20,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30590,"byte_end":30614,"line_start":36,"line_end":36,"column_start":21,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1679}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":30772,"byte_end":30803,"line_start":45,"line_end":45,"column_start":13,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":31754,"byte_end":31785,"line_start":77,"line_end":77,"column_start":26,"column_end":57},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":32711,"byte_end":32734,"line_start":112,"line_end":112,"column_start":13,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/nearest_neighbor.rs","byte_start":33022,"byte_end":33045,"line_start":123,"line_end":123,"column_start":26,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/rstar.rs","byte_start":44537,"byte_end":44559,"line_start":28,"line_end":28,"column_start":28,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":315},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57418,"byte_end":57442,"line_start":44,"line_end":44,"column_start":9,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":57610,"byte_end":57634,"line_start":53,"line_end":53,"column_start":34,"column_end":58},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58032,"byte_end":58064,"line_start":73,"line_end":73,"column_start":9,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58240,"byte_end":58272,"line_start":82,"line_end":82,"column_start":34,"column_end":66},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":376},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":58597,"byte_end":58610,"line_start":97,"line_end":97,"column_start":34,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":386},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59018,"byte_end":59039,"line_start":119,"line_end":119,"column_start":9,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59221,"byte_end":59242,"line_start":128,"line_end":128,"column_start":34,"column_end":55},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59776,"byte_end":59796,"line_start":151,"line_end":151,"column_start":13,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":59990,"byte_end":60010,"line_start":160,"line_end":160,"column_start":38,"column_end":58},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":60548,"byte_end":60576,"line_start":181,"line_end":181,"column_start":9,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":60948,"byte_end":60976,"line_start":196,"line_end":196,"column_start":34,"column_end":62},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":415},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":61552,"byte_end":61575,"line_start":219,"line_end":219,"column_start":9,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/algorithm/selection_functions.rs","byte_start":61794,"byte_end":61817,"line_start":231,"line_end":231,"column_start":34,"column_end":57},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":362}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62516,"byte_end":62521,"line_start":9,"line_end":9,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":441}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62524,"byte_end":62528,"line_start":9,"line_end":9,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":441}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62531,"byte_end":62540,"line_start":9,"line_end":9,"column_start":36,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1653},"to":{"krate":0,"index":441}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/envelope.rs","byte_start":62555,"byte_end":62560,"line_start":9,"line_end":9,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":6203},"to":{"krate":0,"index":441}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66248,"byte_end":66257,"line_start":45,"line_end":45,"column_start":25,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":828},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66539,"byte_end":66548,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/node.rs","byte_start":66749,"byte_end":66759,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":74088,"byte_end":74099,"line_start":152,"line_end":152,"column_start":26,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":485},"to":{"krate":0,"index":488}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":76113,"byte_end":76114,"line_start":197,"line_end":197,"column_start":25,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":493},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/object.rs","byte_start":76270,"byte_end":76271,"line_start":208,"line_end":208,"column_start":27,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":497},"to":{"krate":0,"index":488}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78327,"byte_end":78331,"line_start":37,"line_end":37,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":78334,"byte_end":78338,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/params.rs","byte_start":79451,"byte_end":79464,"line_start":61,"line_end":61,"column_start":22,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84292,"byte_end":84299,"line_start":99,"line_end":99,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":92},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84302,"byte_end":84305,"line_start":99,"line_end":99,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":589},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84308,"byte_end":84313,"line_start":99,"line_end":99,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84316,"byte_end":84320,"line_start":99,"line_end":99,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84323,"byte_end":84329,"line_start":99,"line_end":99,"column_start":52,"column_end":58},"kind":"SuperTrait","from":{"krate":15,"index":564},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84332,"byte_end":84342,"line_start":99,"line_end":99,"column_start":61,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1690},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84345,"byte_end":84350,"line_start":99,"line_end":99,"column_start":74,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":6203},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":84376,"byte_end":84377,"line_start":101,"line_end":101,"column_start":22,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":534},"to":{"krate":0,"index":532}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85861,"byte_end":85865,"line_start":157,"line_end":157,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":535}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85868,"byte_end":85873,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":535}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85876,"byte_end":85885,"line_start":157,"line_end":157,"column_start":33,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1653},"to":{"krate":0,"index":535}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":85888,"byte_end":85893,"line_start":157,"line_end":157,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":6203},"to":{"krate":0,"index":535}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86773,"byte_end":86774,"line_start":179,"line_end":179,"column_start":22,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/point.rs","byte_start":86814,"byte_end":86819,"line_start":181,"line_end":181,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":535},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91413,"byte_end":91417,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91590,"byte_end":91594,"line_start":47,"line_end":47,"column_start":25,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":91757,"byte_end":91761,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/line.rs","byte_start":93132,"byte_end":93136,"line_start":106,"line_end":106,"column_start":27,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":488}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95565,"byte_end":95578,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":95868,"byte_end":95881,"line_start":47,"line_end":47,"column_start":28,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":972},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/point_with_data.rs","byte_start":96051,"byte_end":96064,"line_start":58,"line_end":58,"column_start":30,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":972},"to":{"krate":0,"index":488}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97006,"byte_end":97015,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":97892,"byte_end":97901,"line_start":55,"line_end":55,"column_start":27,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1028},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98027,"byte_end":98036,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98170,"byte_end":98179,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/primitives/rectangle.rs","byte_start":98507,"byte_end":98516,"line_start":87,"line_end":87,"column_start":27,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":488}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":100608,"byte_end":100613,"line_start":16,"line_end":16,"column_start":29,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106218,"byte_end":106229,"line_start":159,"line_end":159,"column_start":43,"column_end":54},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106512,"byte_end":106517,"line_start":169,"line_end":169,"column_start":39,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":106873,"byte_end":106878,"line_start":183,"line_end":183,"column_start":9,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":107803,"byte_end":107808,"line_start":211,"line_end":211,"column_start":17,"column_end":22},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":116980,"byte_end":116985,"line_start":452,"line_end":452,"column_start":17,"column_end":22},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":119954,"byte_end":119959,"line_start":533,"line_end":533,"column_start":17,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":121542,"byte_end":121547,"line_start":583,"line_end":583,"column_start":17,"column_end":22},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":125872,"byte_end":125877,"line_start":694,"line_end":694,"column_start":17,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/linkov/.cargo/registry/src/github.com-1ecc6299db9ec823/rstar-0.7.1/src/rtree.rs","byte_start":126414,"byte_end":126419,"line_start":713,"line_end":713,"column_start":17,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}}]}